// Generated by the WebObjects Wizard Wed Aug 22 11:07:39 America/Los_Angeles 2001
package er.directtoweb;

import com.webobjects.foundation.*;
import com.webobjects.appserver.*;
import com.webobjects.eocontrol.*;
import com.webobjects.eoaccess.*;
import java.util.*;
import er.extensions.*;
import org.apache.log4j.*;

public class ERD2WGroupingListXMLPageTemplate extends ERD2WGroupingListPageTemplate {

    public ERD2WGroupingListXMLPageTemplate(WOContext context) {super(context);}
    //////////////////////////////////////////////  log4j category  //////////////////////////////////////////
    public final static Category cat = Category.getInstance("er.directtoweb.ERGroupingListXMLPageTemplate");

    private final static String NULL="N/A";
    
    public Object value() {
        return object().valueForKeyPath((String)d2wContext().valueForKey("propertyKey"));
    }


    public String displayNameForGroupingKey(){
        d2wContext().takeValueForKey(d2wContext().valueForKey("groupingKey"), "propertyKey");
        return (String)d2wContext().valueForKey("displayNameForProperty");
    }

    public String valueForGroup(){
        String result = "";
        String groupingKeyDisplayKey = (String)d2wContext().valueForKey("groupingKeyDisplayKey");
        if(cat.isDebugEnabled()) cat.debug("groupingKeyDisplayKey = "+groupingKeyDisplayKey);
        if(cat.isDebugEnabled()) cat.debug("sublistSection = "+sublistSection);
        if (sublistSection != null){
        if (groupingKeyDisplayKey!=null && !groupingKeyDisplayKey.equals("")){
                if (sublistSection instanceof EOGenericRecord) {
                    result = (String)((EOGenericRecord)sublistSection).valueForKey(groupingKeyDisplayKey);
                }else if (sublistSection instanceof NSArray) {
                    NSArray values = (NSArray)((NSArray)sublistSection).valueForKey(groupingKeyDisplayKey);
                    result = values.componentsJoinedByString(", ");
                }
            } else {
                result = sublistSection.toString();
            }
        }else {
            result = NULL;
        }
       return result;
    }

    public String componentName() {
        d2wContext().takeValueForKey(ERXConstant.OneInteger, "frame");
        d2wContext().takeValueForKey(d2wContext().valueForKey("thirdLevelRelationshipKey"), "propertyKey");
        return (String)d2wContext().valueForKey("componentName");
    }
}
