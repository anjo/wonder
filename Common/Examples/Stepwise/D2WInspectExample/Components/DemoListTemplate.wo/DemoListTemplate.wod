AttributeCell: WOGenericContainer {
	_unroll = YES;
	align = d2wContext.justification;
	elementName = "td";
	valign = "middle";
}

AttributeDisplay: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	localContext = localContext;
	object = object;
}

AttributeRepetition: WORepetition {
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

AttributeSorter: WOSortOrder {
	displayGroup = displayGroup;
	displayKey = d2wContext.displayNameForProperty;
	key = d2wContext.sortKeyForList;
}

BackLink: WOHyperlink {
	action = backAction;
}

BackLink2: WOHyperlink {
	action = backAction;
}

Banner: WOImage {
	border = "0";
	filename = d2wContext.bannerFileName;
	framework = "JavaDirectToWeb";
}

BannerConditional: WOConditional {
	condition = showBanner;
}

ColumnLabelRepetition: WORepetition {
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

DeleteEO2: WOHyperlink {
	action = deleteObjectAction;
}

DeleteImage2: WOImage {
	alt = "Delete that Object";
	border = 0;
	filename = "trashcan-btn.gif";
	framework = "JavaDirectToWeb";
}

EditEO: WOHyperlink {
	action = editObjectAction;
}

EditImage: WOImage {
	alt = "Edit that Object";
	border = "0";
	filename = "write-btn.gif";
	framework = "JavaDirectToWeb";
}

EntityName: WOString {
	value = d2wContext.entity.name;
}

EntityRepetition: WORepetition {
	item = object;
	list = displayGroup.displayedObjects;
}

ExclamationImage: WOImage {
	border = "0";
	filename = "exclamation.gif";
	framework = "JavaDirectToWeb";
}

FontContainer: WOGenericContainer {
	color = d2wContext.textColor;
	elementName = "font";
}

InspectEO: WOHyperlink {
	action = inspectObjectAction;
}

InspectImage: WOImage {
	alt = "Inspect that Object";
	border = "0";
	filename = "magglass-btn.gif";
	framework = "JavaDirectToWeb";
}

IsEntityNotWritable: WOConditional {
	condition = isEntityInspectable;
}

IsEntityWritable: WOConditional {
	condition = isEntityReadOnly;
	negate = YES;
}

IsEntityWritable2: WOConditional {
	condition = d2wContext.isEntityDeletable;
	negate = NO;
}

IsListing: WOConditional {
	condition = isSelecting;
	negate = YES;
}

IsListing2: WOConditional {
	condition = isSelecting;
	negate = YES;
}

IsPropertySortable: WOConditional {
	condition = d2wContext.propertyIsSortable;
}

IsSelecting: WOConditional {
	condition = isSelecting;
}

ListEmpty: WOConditional {
	condition = isListEmpty;
}

ListNotEmpty: WOConditional {
	condition = isListEmpty;
	negate = YES;
}

ListTable: WOGenericContainer {
	bgcolor = d2wContext.backgroundColorForTable;
	border = 0;
	cellpadding = 1;
	cellspacing = 0;
	elementName = "Table";
}

ListTableHeaderRow: WOGenericContainer {
	bgcolor = "#ffffff";
	elementName = "tr";
}

ListTableRow: WOGenericContainer {
	elementName = "tr";
}

NavBar: WOBatchNavigationBar {
	bgcolor = backgroundColorForTable;
	displayGroup = displayGroup;
	objectName = d2wContext.entity.name;
	textColor = d2wContext.textColor;
	width = 550;
}

PageWrapper: WOSwitchComponent {
	WOComponentName = pageWrapperName;
}

PropertyName: WOString {
	value = d2wContext.displayNameForProperty;
}

ReturnButton: WOImage {
	alt = "Returns to the previous page";
	border = "0";
	filename = "ReturnMetalBtn.gif";
	framework = "JavaDirectToWeb";
	name = "Returns to the previous page";
}

ReturnButton2: WOImage {
	alt = "Returns to the previous page";
	border = 0;
	filename = "ReturnMetalBtn.gif";
	framework = "JavaDirectToWeb";
	name = "Returns to the previous page";
}

SelectEO: WOHyperlink {
	action = selectObjectAction;
}

SelectImage: WOImage {
	alt = "Select that Object";
	border = "0";
	filename = "SelectMetalSmBtn.gif";
	framework = "JavaDirectToWeb";
}

ShowCancel: WOConditional {
	condition = showReturn;
}

ShowCancel2: WOConditional {
	condition = showCancel;
}

