{
    attributes = (
        {
            columnName = ID; 
            name = bugid; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:34:18 +0200"; }; 
        }, 
        {
            columnName = COMP_ID; 
            name = comp_id; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:34:24 +0200"; }; 
        }, 
        {
            columnName = DATE_MODIFIED; 
            name = dateModified; 
            prototypeName = dateTime; 
            userInfo = {modificationDate = "2002-05-06 07:34:29 +0200"; }; 
        }, 
        {
            columnName = DATE_SUBMITTED; 
            name = dateSubmitted; 
            prototypeName = dateTime; 
            userInfo = {modificationDate = "2002-05-06 07:34:44 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = DIFFICULTY_ID; 
            name = difficultyId; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:37:17 +0200"; }; 
        }, 
        {
            columnName = FEATURE_REQUEST; 
            name = featureRequest; 
            prototypeName = intNumber; 
            userInfo = {modificationDate = "2002-05-06 07:35:41 +0200"; }; 
        }, 
        {
            columnName = ORIGINATOR_ID; 
            name = originator_id; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:35:47 +0200"; }; 
        }, 
        {
            columnName = PEOPLE_ID; 
            name = people_id; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:35:53 +0200"; }; 
        }, 
        {
            columnName = PR_ID; 
            name = pr_id; 
            prototypeName = osType; 
            userInfo = {modificationDate = "2002-05-06 07:36:11 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = PREVIOUS_OWNER_ID; 
            name = previousOwnerID; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:36:23 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = READ_; 
            name = read; 
            prototypeName = charFlag; 
            userInfo = {modificationDate = "2002-05-06 07:36:29 +0200"; }; 
        }, 
        {
            columnName = RELEASE_ID; 
            name = releaseID; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:36:36 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = SUB_TYPE_ID; 
            name = requirementSubTypeId; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:37:24 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = REQ_TYPE_ID; 
            name = requirementTypeId; 
            prototypeName = id; 
            userInfo = {modificationDate = "2002-05-06 07:37:36 +0200"; }; 
        }, 
        {
            columnName = STATE_ID; 
            name = state_id; 
            prototypeName = osType; 
            userInfo = {modificationDate = "2002-05-06 07:42:33 +0200"; }; 
        }, 
        {
            columnName = SUBJECT; 
            name = subject; 
            prototypeName = varchar100; 
            userInfo = {modificationDate = "2002-05-06 07:36:56 +0200"; }; 
        }, 
        {
            allowsNull = Y; 
            columnName = DESCRIPTION; 
            name = textDescription; 
            prototypeName = longText; 
            userInfo = {modificationDate = "2002-05-06 07:37:10 +0200"; }; 
        }
    ); 
    attributesUsedForLocking = (
        bugid, 
        subject, 
        people_id, 
        state_id, 
        comp_id, 
        pr_id, 
        read, 
        originator_id, 
        featureRequest, 
        releaseID, 
        requirementTypeId, 
        requirementSubTypeId, 
        difficultyId, 
        previousOwnerID, 
        textDescription
    ); 
    className = er.bugtracker.Requirement; 
    classProperties = (
        subject, 
        priority, 
        component, 
        owner, 
        state, 
        read, 
        dateSubmitted, 
        dateModified, 
        originator, 
        featureRequest, 
        testItems, 
        targetRelease, 
        textDescription, 
        difficulty, 
        requirementSubType, 
        requirementType, 
        previousOwner, 
        bugid
    ); 
    externalName = REQUIREMENT; 
    internalInfo = {
        _clientClassPropertyNames = (
            subject, 
            priority, 
            component, 
            owner, 
            state, 
            read, 
            dateSubmitted, 
            dateModified, 
            originator, 
            bugid, 
            featureRequest, 
            targetRelease, 
            textDescription, 
            requirementType, 
            requirementSubType, 
            difficulty, 
            bugTickets
        ); 
    }; 
    name = Requirement; 
    parent = Bug; 
    primaryKeyAttributes = (bugid); 
    relationships = (
        {
            deleteRule = EODeleteRuleCascade; 
            destination = XBugTestItem; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = bugid; sourceAttribute = bugid; }); 
            name = bugTestItems; 
            propagatesPrimaryKey = Y; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = Component; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = comp_id; sourceAttribute = comp_id; }); 
            name = component; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = Difficulty; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = oid; sourceAttribute = difficultyId; }); 
            name = difficulty; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = People; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = originator_id; }); 
            name = originator; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = People; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = people_id; }); 
            name = owner; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = People; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = previousOwnerID; }); 
            name = previousOwner; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = Priority; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = oid; sourceAttribute = pr_id; }); 
            name = priority; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = RequirementSubType; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = (
                {
                    destinationAttribute = requirementSubTypeId; 
                    sourceAttribute = requirementSubTypeId; 
                }
            ); 
            name = requirementSubType; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            deleteRule = EODeleteRuleCascade; 
            destination = XRequirementTestItem; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = bugid; sourceAttribute = bugid; }); 
            name = requirementTestItems; 
            propagatesPrimaryKey = Y; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = RequirementType; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = (
                {
                    destinationAttribute = requirementTypeId; 
                    sourceAttribute = requirementTypeId; 
                }
            ); 
            name = requirementType; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = State; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = oid; sourceAttribute = state_id; }); 
            name = state; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            destination = Release; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = releaseID; }); 
            name = targetRelease; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }, 
        {
            definition = bugTestItems.testItem; 
            joinSemantic = EOInnerJoin; 
            name = testItems; 
            userInfo = {modificationDate = "2002-05-04 13:06:03 +0200"; }; 
        }
    ); 
    userInfo = {modificationDate = "2002-05-07 22:38:33 +0200"; }; 
}
