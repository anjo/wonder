
{
    attributes = 
    (
       
       {
           columnName = COMP_ID;
           name = componentID;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:14:50 +0200";
           };
       }, 
       
       {
           allowsNull = Y;
           columnName = DATE_MODIFIED;
           name = dateModified;
           prototypeName = dateTime;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:15:02 +0200";
           };
       }, 
       
       {
           allowsNull = Y;
           columnName = DATE_SUBMITTED;
           name = dateSubmitted;
           prototypeName = dateTime;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:15:09 +0200";
           };
       }, 
       
       {
           columnName = ID;
           name = id;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:14:34 +0200";
           };
       }, 
       
       {
           allowsNull = N;
           columnName = IS_FEATURE_REQUEST;
           name = isFeatureRequest;
           prototypeName = flag;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:35:29 +0200";
           };
           valueType = c;
       }, 
       
       {
           allowsNull = N;
           columnName = IS_READ;
           name = isRead;
           prototypeName = flag;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:28:53 +0200";
           };
       }, 
       
       {
           columnName = ORIGINATOR_ID;
           name = originatorID;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:28:05 +0200";
           };
       }, 
       
       {
           columnName = PEOPLE_ID;
           name = ownerID;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:28:11 +0200";
           };
       }, 
       
       {
           allowsNull = Y;
           columnName = PREVIOUS_OWNER_ID;
           name = previousOwnerID;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:28:44 +0200";
           };
       }, 
       
       {
           columnName = PR_ID;
           name = priorityID;
           prototypeName = osType;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:30:09 +0200";
           };
       }, 
       
       {
           columnName = RELEASE_ID;
           name = releaseID;
           prototypeName = id;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:30:25 +0200";
           };
       }, 
       
       {
           columnName = STATE_ID;
           name = stateID;
           prototypeName = osType;
           userInfo = 
           {
               "New Key" = "New Value";
               modificationDate = "2002-05-06 07:42:12 +0200";
           };
       }, 
       
       {
           columnName = SUBJECT;
           name = subject;
           prototypeName = varchar50;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:30:48 +0200";
           };
       }, 
       
       {
           allowsNull = Y;
           columnName = DESCRIPTION;
           name = textDescription;
           prototypeName = longText;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:30:56 +0200";
           };
       }, 
       
       {
           allowsNull = Y;
           columnName = type;
           name = type;
           prototypeName = charFlag;
           userInfo = 
           {
               modificationDate = "2002-05-06 07:28:53 +0200";
           };
       }
    );
    attributesUsedForLocking = 
    (
       componentID, 
       id, 
       isFeatureRequest, 
       isRead, 
       originatorID, 
       ownerID, 
       previousOwnerID, 
       priorityID, 
       releaseID, 
       stateID, 
       subject, 
       textDescription, 
       type
    );
    className = er.bugtracker.Bug;
    classProperties = 
    (
       comments, 
       component, 
       dateModified, 
       dateSubmitted, 
       isFeatureRequest, 
       isRead, 
       originator, 
       owner, 
       previousOwner, 
       priority, 
       state, 
       subject, 
       targetRelease, 
       testItems, 
       textDescription, 
       type
    );
    externalName = BUG;
    internalInfo = 
    {
        _clientClassPropertyNames = 
        (
           component, 
           dateModified, 
           dateSubmitted, 
           id, 
           isFeatureRequest, 
           isRead, 
           originator, 
           owner, 
           priority, 
           state, 
           subject, 
           targetRelease, 
           testItems, 
           textDescription, 
           type
        );
    };
    name = Bug;
    primaryKeyAttributes = 
    (
       id
    );
    relationships = 
    (
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = XBugTestItem;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = bugID;
                  sourceAttribute = id;
              }
           );
           name = bugTestItems;
           propagatesPrimaryKey = Y;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = Comment;
           isMandatory = N;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = bugID;
                  sourceAttribute = id;
              }
           );
           name = comments;
           ownsDestination = N;
           propagatesPrimaryKey = Y;
       }, 
       
       {
           destination = Component;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = componentID;
              }
           );
           name = component;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = People;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = originatorID;
              }
           );
           name = originator;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = People;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = ownerID;
              }
           );
           name = owner;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = People;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = previousOwnerID;
              }
           );
           name = previousOwner;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = Priority;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = priorityID;
              }
           );
           name = priority;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = State;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = stateID;
              }
           );
           name = state;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           destination = Release;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = id;
                  sourceAttribute = releaseID;
              }
           );
           name = targetRelease;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }, 
       
       {
           definition = bugTestItems.testItem;
           name = testItems;
           userInfo = 
           {
               modificationDate = "2002-05-04 13:06:03 +0200";
           };
       }
    );
    restrictingQualifier = "(type='b')";
    userInfo = 
    {
        modificationDate = "2002-05-07 22:38:33 +0200";
    };
}