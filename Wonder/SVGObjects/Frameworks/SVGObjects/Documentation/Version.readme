WOSVGTest1B2:

1. Factoring out WOSVG component for embedding svg pages into WebObjects apps.
It has basic .api (pageName, height, width)
2. Using WOGenericContainer instead of WOActionURL in an <EMBED> tag.

WOSVGTest1B4:

1. Factoring out WOSVG.wo into SVGObjects.fproj as a subproject.

WOSVGTest1C3:

1. Added directActionName to WOSVG.api and sessionless/directAction support.

WOSVGTest1D:

1. Created first dynamic svg component: SVGText to control the attributes of text in SVG.
2. Added support for changing the font-size.

WOSVGTest1D2:

1. Giving the use full control over text attributes.

WOSVGImageTest1A:

1. Created basic SVGImage.wo component which uses appendToResponse: to appendContentString(s)

WOSVGImageTest1B:

1. Made the component non synching and stateless.

WOSVGRectTest1A:

1. Created basic SVGRect component with (x, y, height, width, style) as .api
2. Made it non-synching and stateless.
3. Added documentation for SVGRect.wo. (Not integrated with component just yet)

WOSVGAnimateTest1A:

1. Created basic SVGAnimate.wo with standard .api

WOSVGAnimateTest1B:

1. Fixed oversight in appendToResponse: attributeName and values weren't being appended properly because of missing stringWithFormat:..

WOSVGAnimateTest1B2:

1. Added documentation for SVGAnimate, SVGImage & SVGCircle.
2. Added 'style' to SVGText and SVGCircle with correct validation messages.
In prepatation for having one or the other (i.e 'style' or the subattributes).

WOSVGTextTest2A:

1. Simplified validation messages in SVGText, SVGCircle and WOSVG.
2. Added (filename, framework) to WOSVG.api

WOSVGTextTest3B:

1. Added 'fontFamily' to SVGText.api.

WOSVGTextTest3C:

1. Added 'transform' to SVGText.api.
2. Documenting SVGText.wo

SVGObjects1A:

1. Spun off the SVGObjects.fproj from WOSVGTextTest3C.
2. Moved WOSVG component into its own WOComponent.subproj as it is technically an HTML component more like a typical WO* component, while the SVG* components are strictly speaking SVG/XML components.
3. Set the NSPrincipalClass to WOSVG in the CustomInfo.plist and converted WOSVG.wos to WOSVG.m for the purpose of using this with non-compiled apps.

SVGObjects1B:

1. Changing SVGRect.wo to a container like SVGCircle.wo.

SVGObjects1B2:

1. Changing SVGImage.wo to a container as defined in the SVG.dtd.

SVGObjects1C

1. Added SVGPage to encapsulate 

SVGObjects1D:

1. Added XMLComponents.subproj and XMLHyperlink.wo to it.
2. Using invokeAction to WOSVG.m (and to XMLHyperlink.wo)

SVGObjects1D2:

1. Added 'action' binding to XMLHyperlink.wo
2. Removing SVGPage.

SVGObjects1E:

1. Renamed XMLHyperlink to WXHyperlink
2. Added WXGenericElement (in order to replace SVGAnimate, etc..)
3. Removed redundant SVGAnimate.
4. Added documentation for XMLComponents.
5. Reverted WOSVG.m to WOSVG.wos
6. Created a 'placeholder' SVGObjects.m class in othersources to be the primaryClass in the CusomtInfo.plist

SVGObjects1F:

1. Added 'otherTagString' to WXGenericElement.

SVGObjects1G:

1. Adding (non-functional) textAlign binding to SVGText.
2. Fixed bug: framework = "app" binding didn't vend an SVGImage.
3. Added (x, y) to SVGImage.api

SVGObjects1H:

1. Restored 'queryDictionary' usage for component action

SVGObjects1H2:

2. Re-implemented WOSVG.java as a DynamicElement which will take additonal
bindings to pass onto the SVG page/component (instead of queryDictionary).

SVGObjects2A:

1. Re-wrote SVGRect.wos to SVGRect.java

SVGObjects2A2:

1. Re-wrote SVGCircle.wos to SVGCircle.java

SVGObjects2A3:

1. Re-wrote SVGText.wos to SVGText.java
2. Fixed trivial bug: WXGenericElement.java: generic attributes were being cast as Strings instead of Object.

SVGObjects2A4:

1. Rewrote and tested SVGImage.wos as a WODynamicElement SVGImage.java.

SVGObjects2A5:

1. Rewrote WXHyperlink.wos as WXHyperlink.java a WODynamicElement.
Basic testing of component actions.
2. Added copyright+credits headers.
3. Added missing Copyright.html.

SVGObjects2B:

1. Added WXScript.java to XMLComponents.subproj.
2. Added WXScript.html documentation.

SVGObjects3A:

1. Re thought the SVG* classes (less SVGImage which is not 'convenience' component).
2. Incorporating the SODynamicElement.java based SO* classes as replacements.
These classes all have a 'style' attribute in common and don't add any functionality as such. So they can all inherit from SODynamicElement.java.

SVGObjects3A2:

1. Replaced SVGCircle with SOCircle: SODynamicElement.
2. Did the same with SORect.
3. Updated documentation & tested against examples. (SORect needs testing).

SVGObjects3B:

1. Adding SOTextPath (needs addition of binding: xlink:href) (+ testing)
2. Added the rest of the SVG shapes.

SVGObjects3C:

1. Created a Document.subproj for SOSvg, SOGroup, SOSymbol, SOUse
2. Added 'href' association/binding to SODynamicElement as a workaround for not being able to define public bindings such as "xlink:href".

SVGObjects3C2:

1. Added SOMarker to Painting.subproj
2. Added SOFilter to Filter.subproj

SVGObjects3D:

1. Add $style functionality to SVGImage/SOImage.
2. Updated/corrected documentation + added copyright info to new classes.
3. Added overlooked SOTextSpan and SOTextReference.

SVGObjects3D3:

1. Added 'pluginspage' to WOSVG.

SVGObjects4A:

1. Converted Framework from Bridged Java to Pure Java
2. Imported project to PB 5
3. Removed redundant Other Sources
4. Removed redundant SVGObjects.java (was a place holder)
5. Changed the (WOElement) casts to (WOActionResults) in the invokeAction methods
6. Removed the redundant and depreciated API isFromClientComponent

SVGObjects4A2:

1. Cleaned up top level directory: grouping components .api, .java & .wo together
2. Placed all the documentation into a Documentation folder which was added to the Framework.

SVGObjects4A3:

1. Cleaning up the Subprojects.
2. Removing redundant PB.project files
3. Ungrouping Subproject Web Components

SVGObjects4B:

1. Recreating the Framework in PB 5.
2. Adding Documentation folder.
3. Grouping and organising code in new WO5 style: 3 groups in Web Components - WO, XML, SVG. No .subproj folders for different SVG components.

SVGObjects4B2:

1. Adding the Sources and Components to the Deployment + Development targets.
2. Removing the depreciated WXGenericElement and its files.

SVGObjects4B4:

1. Removing cause of -depreciated warnings

SVGObjects4B5:

1. Rebuilt & run under MacOS X.1/WOF5u3 and SVG viewer X 3.0