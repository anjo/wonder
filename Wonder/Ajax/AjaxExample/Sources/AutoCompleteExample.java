// Generated by the WOLips Templateengine Plug-in at 26.03.2006 01:19:23

import java.io.File;
import java.io.IOException;
import java.util.Enumeration;
import java.util.Random;

import org.apache.log4j.Logger;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSMutableArray;

import er.extensions.ERXFileUtilities;

public class AutoCompleteExample extends WOComponent {
    
    Logger log = Logger.getLogger(AutoCompleteExample.class);

	public static class Example {
		public Example(String name) {
			this.name = name;
			this.value = name.length();
		}
		public String name;
		public int value;
	}
    
    public String value;
    public Example currentValue;
    
    public NSMutableArray allValues;

    public AutoCompleteExample(WOContext context) {
        super(context);
        allValues = new NSMutableArray();
        Random rand = new Random();
        // some sample data. if we don't find the file, just create random strings
        File f = new File("/usr/share/dict/words");
        if(f.exists()) {
            try {
                String words = ERXFileUtilities.stringFromFile(f);
                String splitWords[] = words.split("\\n");
                for (int i = 0; i < splitWords.length; i++) {
                    String word = splitWords[i];
                    // we don't want all words, that just takes too long
                    if(word.length() > 0 && ((i % 20) == 0)) {
                        Example example = new Example(word);
                        allValues.addObject(example);
                    }
                }
            } catch (IOException e) {
                log.error("Can't read " + f + ": " + e, e);
            }
        }
        if(allValues.count() == 0) {
            for(int i = 0; i < 1000; i++) {
                String s = "";
                int max = 6 + rand.nextInt(6);
                for(int j = 0; j< max; j++) {
                    int c = rand.nextInt(26);
                    s += Character.toString((char) ('A' + c));
                }
                Example example = new Example(s);
                allValues.addObject(example);
            }
        }
        EOSortOrdering.sortArrayUsingKeyOrderArray(allValues, new NSArray(
                EOSortOrdering.sortOrderingWithKey("name", EOSortOrdering.CompareAscending)));
    }

    /**
     * This method gets called after every keystroke, we check the value variable and return the 10 entries
     * in allValues that contain this value.
     */
    public NSArray currentValues() {
        NSMutableArray result = new NSMutableArray();
        for(Enumeration e = allValues.objectEnumerator(); e.hasMoreElements() && result.count() < 10;) {
        	Example c = (Example) e.nextElement();
            if(value == null || c.name.toLowerCase().indexOf(value.toLowerCase()) >= 0) {
                result.addObject(c);
            }
        }
        return result;
    }
}