package er.ajax;

// Generated by the WOLips Templateengine Plug-in at Apr 28, 2006 2:56:03 PM

import com.webobjects.appserver.WOActionResults;
import com.webobjects.appserver.WOAssociation;
import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.appserver.WOElement;
import com.webobjects.appserver.WORequest;
import com.webobjects.appserver.WOResponse;
import com.webobjects.appserver._private.WOConstantValueAssociation;
import com.webobjects.appserver._private.WODynamicElementCreationException;
import com.webobjects.foundation.NSDictionary;
import com.webobjects.foundation.NSMutableArray;
import com.webobjects.foundation.NSMutableDictionary;

public class AjaxRoundEffect extends AjaxDynamicElement {
  private NSDictionary myAssociations;
  private WOAssociation myElementNameAssociation;
  private WOAssociation myClassAssociation;
  private WOAssociation myGenerateTagsAssociation;
  private WOAssociation myIDAssociation;

  public AjaxRoundEffect(String _name, NSDictionary _associations, WOElement _children) {
    super(_name, _associations, _children);
    myAssociations = _associations;
    myElementNameAssociation = (WOAssociation) _associations.objectForKey("elementName");
    if (myElementNameAssociation == null) {
      myElementNameAssociation = new WOConstantValueAssociation("div");
    }
    myClassAssociation = (WOAssociation) _associations.objectForKey("class");
    if (myClassAssociation == null) {
      throw new WODynamicElementCreationException("'class' is a required binding.");
    }
    myGenerateTagsAssociation = (WOAssociation) _associations.objectForKey("generateTags");
    if (myGenerateTagsAssociation == null) {
      myGenerateTagsAssociation = new WOConstantValueAssociation(Boolean.FALSE);
    }
    myIDAssociation = (WOAssociation) _associations.objectForKey("id");
  }

  protected void addRequiredWebResources(WOResponse _response, WOContext _context) {
    addScriptResourceInHead(_context, _response, "prototype.js");
    addScriptResourceInHead(_context, _response, "rico.js");
  }

  protected WOActionResults handleRequest(WORequest _request, WOContext _context) {
    return null;
  }

  public NSDictionary createAjaxOptions(WOComponent _component) {
    NSMutableArray ajaxOptionsArray = new NSMutableArray();
    ajaxOptionsArray.addObject(new AjaxOption("corners", AjaxOption.STRING));
    ajaxOptionsArray.addObject(new AjaxOption("color", AjaxOption.STRING));
    ajaxOptionsArray.addObject(new AjaxOption("bgColor", AjaxOption.STRING));
    ajaxOptionsArray.addObject(new AjaxOption("blend", AjaxOption.BOOLEAN));
    ajaxOptionsArray.addObject(new AjaxOption("border", AjaxOption.BOOLEAN));
    ajaxOptionsArray.addObject(new AjaxOption("compact", AjaxOption.BOOLEAN));
    NSMutableDictionary options = AjaxOption.createAjaxOptionsDictionary(ajaxOptionsArray, _component, myAssociations);
    return options;
  }

  public void appendToResponse(WOResponse _response, WOContext _context) {
    super.appendToResponse(_response, _context);
    WOComponent component = _context.component();
    String className = (String) myClassAssociation.valueInComponent(component);
    String elementName = (String) myElementNameAssociation.valueInComponent(component);
    boolean generateTags = ((Boolean) myGenerateTagsAssociation.valueInComponent(component)).booleanValue();
    if (generateTags) {
      elementName = "div";
      _response.appendContentString("<");
      _response.appendContentString(elementName);
      _response.appendContentString(" class = \"");
      _response.appendContentString(className);
      _response.appendContentString("\"");
      if (myIDAssociation != null) {
        _response.appendContentString(" id = \"");
        String id = (String) myIDAssociation.valueInComponent(component);
        _response.appendContentString(id);
        _response.appendContentString("\"");
      }
      _response.appendContentString(">");
    }
    appendChildrenToResponse(_response, _context);
    if (generateTags) {
      _response.appendContentString("\n</");
      _response.appendContentString(elementName);
      _response.appendContentString(">");
    }
    _response.appendContentString("\n");
    _response.appendContentString("<script type = \"text/javascript\"><!--\n");
    _response.appendContentString("new Rico.Effect.Round('");
    _response.appendContentString(elementName);
    _response.appendContentString("', '");
    _response.appendContentString(className);
    _response.appendContentString("', ");
    NSDictionary options = createAjaxOptions(component);
    AjaxOptions.appendToResponse(options, _response, _context);
    _response.appendContentString(");");
    _response.appendContentString("\n// --></script>");
  }
}