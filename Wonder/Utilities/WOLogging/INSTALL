
INSTALLATION NOTES
==================

Overview

		Here's how it works. 

		1. WebObjects component (PMPage) appends an additional header to its response. This header contains some information on the current request (component name, application name, session id, etc.). 
		2. Apache reads the header and transforms it into env.variable. This way the header won't be forwarded to the browser and Apache still has access to it.
		3. Apache appends the variable to the log.
		4. A ruby script analyzes the logs and creates statistics (Examples available in analysis/0.9/output).

I. WebObjects 
	
		We made a distinction between a "Component" and a "Page". A "Page" is the context page (main page). Other components (subcomponents, including page wrappers) are "Components". Only "Pages" should append this additional header to response to avoid unpredictable results, like overwriting the header by subcomponents. Add the modified appendToResponse() to your "Page" superclass.

II. Apache 2
		
		Modified mod_headers has now a new action named "envify". 
		Adding the following line to httpd.conf :			
			Header envify x-webobjects-customenv x-webobjects-customenv
		will remove header from the response and add it to env.variable pool.

III. Ruby
	
		Note: Ruby 1.8 or newer is required to run the scripts.

		Ruby scripts version 0.9 provides a repository of all requests linked using many criteria (like session_id, page name, app name, IP address, etc.). These records are double-linked. Stat-modules then create reports from the repository. For more info, read the analysis/0.9/README file.


In case of problems / questions, please contact: 
jacek@power.com.pl
wojtek@power.com.pl
	

	
