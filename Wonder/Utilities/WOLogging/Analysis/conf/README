
Configuration HOWTO
====================

An example is worth a thousand words. Take a look at 'example-configuration.rb' (It is important to keep rb extensions).

APPNAME_PATTERN says that only application names matching the given regexp pattern will be taken into account. It is useful when several applications are running on the same web server.

OUTPUT_DIR says where the resulting report files (e.g. html) should be stored. Whenever the given output dir turns out to be read-only, the tool will save the resulting report files in a local "output/" subdirectory. It is useful if report generation lasts a long time, but I recommend to try a small log file first :-).

OUTPUT_FORMATS says what formats should be produced. Currently there are HTML and TEXT, but you can add your own ones. ReportGenerator is the tool responsible for generating them. It might be more robust, but it works as a start.

OUTPUT_FILE_NAME - format of the output file name including optional date pattern.


AddStatistics - this is actually a ruby function invocation. It takes two parameters:
  - statistic module (e.g. SESSION_TRACK_STATS),
	- reports to be generated. The reports should be a hash map of the following structure:
	  - key should be report name (user-friendly, like "Average request time per page")
		- value should be a hash map with parameters:
		  - key: STAT_TYPE, value: a class representing a report (e.g. STAT_TYPE => AvgReqTimeReport),
			- key: additional_parameter_name, value: additional parameter value. Some reports require additional parameters (see below).

REPORT TYPES AND THEIR PARAMETERS
=================================

Currently supported report types:

Page reports (PAGE_STATS):
- AvgReqTimeReport (no parameters needed)
- PageVisitsReport (no parameters needed)
Session track reports (SESSION_TRACK_STATS):
- IndividualTracksReport (no parameters needed)
- ConversionReport (see class description)
- ValidationReport (see class description)



