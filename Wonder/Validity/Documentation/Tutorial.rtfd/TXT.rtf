{\rtf1\mac\ansicpg10000\cocoartf100
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww19300\viewh15660\viewkind0
\pard\tx1440\tx2880\tx4320\tx5760\tx7200\ql\qnatural

\f0\b\fs48 \cf0 Validity Tutorial
\f1\b0\fs24 \
\
This tutorial will begin to help you understand how to use Validity in your next application.  It is assumed you have some knowledge of WebObjects programming.  If Validity is not installed, please follow the steps in the 'Validity ReadMe.rtf'.\
\
1. Create a new WebObjects Application with Project Builder called 'ValidityTutorial'.\
2. Launch EOModeler.\
3. Create an EOModel file name 'ValidityTutorial.eomodeld' like the screenshot below:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic pastedGraphic.tiff \width16940 \height8340
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
4.	Create the database and set the Adaptor Info.\
5.	Generate the SQL and Java Files.\
6.	In Project Builder, import the files: 'ValidityTutorial.eomodeld' and 'User.java'.\
7.	Add the 'Validity.framework' to your project. (Be sure to add it to the 'Application Server' target).\
8.	Select 'User.java' to edit it.\
9.	Add the import statement: import com.gammastream.validity.*;\
10. 	Modify the class 'User' to extend 'GSVGenericRecord' rather than 'EOGenericRecord'.\
11.	Save 'User.java'.\
\
12.	It is time to Launch ValidityModeler.  Launch Terminal and cd to the 'ValidityModeler.woa' directory.  \
13.	Type './ValidityModeler' and hit 'Enter'. Your browser should launch and open Validity Modeler.\
14.	From the 'Start' page, type the path to the 'ValidityTutorial.eomodeld'  in the 'Path to EOModel' field and click 'Open'.\
15.	From the 'Select an Entity' pulldown menu, choose 'User' and click 'View'.\
16.	Click 'firstname' under the 'Attributes' column.\
17.	Next, select 'startsWith - GSVStringMethods.startWith()' from the pulldown menu labeled 'New Rule'.  Click 'Add'.\
18.	Modify the form to match the screenshot below:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic 1__#$!@%!#__pastedGraphic.tiff \width9660 \height7600
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
19. 	Let's discuss each of the fields above.\
		\ul Rule Name\ulnone  - Name of the rule.\
		\ul Class Name\ulnone  - The name of the Class the Method is in (fully qualified).\
		\ul Method Name\ulnone  - Name of the method.\
		\ul Error Message\ulnone  - Message presented to the user should the validation rule be violated.\
		\ul Validate On\ulnone  - Inform Validity when to use this rule for validation.\
		\ul Negate\ulnone  - Returns the opposite of the result from the Method.\
		\ul Parameters\ulnone  - Key/Value pairs sent to the Method as parameters.\
		\ul Add rule to QuickRules\ulnone  - Adds the rule to the list of QuickRules (will use later in the tutorial).\
\
20.	Click 'Save'.\
21.	Click on the 'User' link.\
22.	Click on the 'lastname' attribute.\
23.	Again, select 'contains - GSVStringMethods.contains()' from the pulldown menu labeled 'New Rule'.  Click 'Add'.\
24.	Fill out the form to match the screenshot below:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic 2__#$!@%!#__pastedGraphic.tiff \width10000 \height7380
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
\
25.	Click 'Save'.\
26.	Click on the 'User' link.\
27.	Click on the 'username' attribute.\
28.	Next we will define a custom rule. Select 'New Rule' from the pulldown menu labeled 'New Rule'.  Click 'Add'.\
29.	Fill out the form to match the screenshot below: (To add parameters, click 'New Key/Value').\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic 3__#$!@%!#__pastedGraphic.tiff \width9660 \height7640
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
30.	Click 'Save'.\
31.	Click on the 'User' link.\
32.	Click on the 'password' attribute.\
33.	From pulldown menu labeled 'New Rule', select the last entry named 'usernameLength - Valid.length()' and click 'Add'.\
34.	You may have noticed, but the rule you just selected is the same rule you created just a few steps ago.  You can include any custom or modified rule in the 'QuickRules' menu by checking 'Add Rule to QuickRules' when editing the rule.  The you can modify the 'QuickRules' menu from the preferences page.\
35.	Modify the rule to match the screenshot below:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic 4__#$!@%!#__pastedGraphic.tiff \width10160 \height7480
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
36.	Click 'Save'.\
37.	Return to Project Builder\
38.	Change 'Main.java' to look like the code below. Pay attention to the class which 'Main' extends.\
\
	import com.webobjects.foundation.*;\
	import com.webobjects.appserver.*;\
	import com.webobjects.eocontrol.*;\
	import com.webobjects.eoaccess.*;\
	import com.gammastream.validity.*;\
\
	public class Main extends GSVExceptionableComponent  \{\
\
		EOClassDescription description;\
		User  newUser;\
\
		public Main(WOContext context) \{\
			super(context);\
			description = EOClassDescription.classDescriptionForEntityName("User");\
			newUser = (User)description.createInstanceWithEditingContext(null, null);\
		 \}\
    \
		public WOComponent add() \{\
			try\{\
				(((Session)session()).defaultEditingContext()).insertObject(newUser);\
				(((Session)session()).defaultEditingContext()).saveChanges();\
				newUser = (User)description.createInstanceWithEditingContext(null, null);\
			\}catch(NSValidation.ValidationException e)\{\
				raiseGSVException(e);\
			\}\
			return null;\
		    \}\
	\}\
\
39.	Create a new Java file named 'Valid.java'.  We are calling it Valid because that is the Class name for the usernameLength and passwordLength rules we defined above. \
40.	Add the import statement 'import java.math.BigDecimal;' and the method below:\
\
	public final static boolean length(Object object, Object attribute, String key, NSDictionary params)\{\
		if(attribute instanceof String)\{\
			String number = (String)params.objectForKey("length");\
			BigDecimal left = new BigDecimal(((String)attribute).length());\
			BigDecimal right = new BigDecimal(number);\
			int comparisonValue=left.compareTo(right);\
			return(comparisonValue==1 || comparisonValue==0);\
		\}\
		return false;\
	\}\
\
41.	Save 'Valid.java'.\
42.	Open 'Main.wo' in WebObjects Builder.\
43.	Create a form similar to the one below.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural
\cf0 {{\NeXTGraphic 5__#$!@%!#__pastedGraphic.tiff \width7900 \height5860
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f1\fs24 \cf0 \
	A.	The 'Submit' button's 'action' is bound to 'add'.\
	B.	The com.gammastream.validity.GSVException's are bound as follows: \
		(Note: The 'exception' is bound to 'exception', when defining this in your WOComponent, WebObjects Builder may ask if you wish 'Add Key'.  You do not want to do this.)\
\
		GSVExceptionViewer1: GSVExceptionViewer \{\
			face = "Arial, Helvetica";\
			showAllErrors = false;\
			color = "#FF0000";\
			style = "b";\
			exception = exception;\
			attributeKey = "firstname";\
			size = 2;\
		\}\
\
		GSVExceptionViewer2: GSVExceptionViewer \{\
			face = "Arial, Helvetica";\
			showAllErrors = false;\
			color = "#FF0000";\
			style = "b";\
			exception = exception;\
			attributeKey = "lastname";\
			size = 2;\
		\}\
\
		GSVExceptionViewer3: GSVExceptionViewer \{\
			face = "Arial, Helvetica";\
			showAllErrors = false;\
			color = "FF0000";\
			style = "u";\
			exception = exception;\
			attributeKey = "username";\
			size = 2;\
		\}\
\
		GSVExceptionViewer4: GSVExceptionViewer \{\
			showAllErrors = false;\
			exception = exception;\
			attributeKey = "password";\
		\}\
\
44.	Save 'Main.wo'\
45.	Build and run in Project Builder.\
46.	Play with the form.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural

\f0\b \cf0 \ul Notes:
\f1\b0 \ulnone \
If you change the binding 'showAllErrors' on GSVExceptionViewer to true, you will not need the 'attributeKey' binding and it will show all errors together.  Give it a try.\
 }