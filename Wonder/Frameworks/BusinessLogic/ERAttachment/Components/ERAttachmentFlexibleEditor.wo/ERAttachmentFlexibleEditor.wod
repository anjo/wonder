ERAttachmentFlexibleUpload : ERAttachmentFlexibleUpload {
  attachment = newAttachment;
  editingContext = attachmentEC;
  finishedFunction = uploadFinishedFunction;
  succeededAction = uploadSucceededAction;
  finishedAction = finishedAction;
  startedFunction = startedFunction;
  allowCancel = allowCancel;
  configurationName = ^configurationName;
  cancelButtonClass = ^uploadCancelButtonClass;
  cancelLabel = uploadCancelLabel;
  canceledAction = ^uploadCanceledAction;
  canceledFunction = ^uploadCanceledFunction;
  cancelingText = ^uploadCancelingText;
  cleanup = ^cleanup;
  clearButtonClass = ^uploadClearClass;
  failedAction = ^uploadFailedAction;
  failedFunction = ^uploadFailedFunction;
  height = ^uploadHeight;
  width = ^uploadWidth;
  injectDefaultCSS = injectDefaultCSS;
  mimeType = ^uploadMimeType;
  ownerID = ^uploadOwnerID;
  refreshTime = ^uploadRefreshTime;
  selectFileButtonClass = ^uploadSelectFileButtonClass;
  selectFileLabel = ^uploadSelectFileLabel;
  storageType = ^storageType;
  id = id;
  clearUploadProgressOnSuccess = true;
}

MainUpdateContainer : AjaxUpdateContainer {
  id = updateContainerID;
  class = "ERAttachmentFlexibleEditor";
  asynchronous = true;
}

NotShowUpload : WOConditional {
  condition = showUpload;
  negate = true;
}

ERAttachmentViewer : ERAttachmentViewer {
  attachment = viewerAttachment;
  height = ^viewHeight;
  width = ^viewWidth;
  configurationName = ^configurationName;
}

ShowFileName : WOConditional {
  condition = showFileName;
}

ShowLink : WOConditional {
  condition = showLink;
}

ERAttachmentLink : ERAttachmentLink {
  attachment = viewerAttachment;
  download = allowDownload;
  configurationName = ^configurationName;
}

OriginalFileName : WOString {
  value = viewerAttachment.originalFileName;
}

NotShowLink : WOConditional {
  condition = showLink;
  negate = true;
}

EditButton : AjaxUpdateLink {
  updateContainerID = updateContainerID;
  action = editAttachment;
  class = editorEditButtonClass;
}

ShowUpload : WOConditional {
  condition = showUpload;
}

CancelButtonDiv : WOGenericContainer {
  elementName = "div";
  class = "AECancelButton";
  id = cancelButtonWrapperID;
}

CancelButton : AjaxUpdateLink {
  updateContainerID = updateContainerID;
  action = cancelEdit;
  class = editorCancelButtonClass;
}



EditHeader : ERXLocalizedString {
  value = uploadDialogHeaderText;
}

EditorEditButtonLabel : ERXLocalizedString {
  value = editorEditLabel;
}

EditorCancelButtonLabel : ERXLocalizedString {
  value = editorCancelLabel;
}
