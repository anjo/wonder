{
    attributes = (
        {
            columnName = "CHECK_OUT_LENGTH"; 
            externalType = integer; 
            name = checkOutLength; 
            prototypeName = intNumber; 
        }, 
        {
            columnName = COST; 
            externalType = decimal; 
            name = cost; 
            precision = 10; 
            prototypeName = amount; 
        }, 
        {
            columnName = "DEPOSIT_AMOUNT"; 
            externalType = decimal; 
            name = depositAmount; 
            precision = 10; 
            prototypeName = amount; 
        }, 
        {
            columnName = NAME; 
            externalType = char; 
            name = name; 
            prototypeName = varchar16; 
            width = 20; 
        }, 
        {
            allowsNull = N; 
            columnName = "RENTAL_TERMS_ID"; 
            externalType = integer; 
            name = rentalTermsID; 
            prototypeName = id; 
        }
    ); 
    attributesUsedForLocking = (rentalTermsID, name, cost, checkOutLength, depositAmount); 
    className = "webobjectsexamples.businesslogic.rentals.common.RentalTerms"; 
    classProperties = (name, cost, checkOutLength, depositAmount); 
    externalName = rentalterms; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (cost, checkOutLength, depositAmount, name); 
        "_javaClientClassName" = "webobjectsexamples.businesslogic.rentals.common.RentalTerms"; 
        "_nameInObjectStore" = "RENTAL_TERMS"; 
    }; 
    maxNumberOfInstancesToBatchFetch = 10; 
    name = RentalTerms; 
    primaryKeyAttributes = (rentalTermsID); 
    relationships = (
        {
            deleteRule = EODeleteRuleDeny; 
            destination = Video; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = rentalTermsID; sourceAttribute = rentalTermsID; }); 
            name = videos; 
        }
    ); 
}
