AttributeCell: WOGenericContainer {
	_unroll = true;
	align = d2wContext.justification;
	elementName = "td";
	valign = "middle";
}

AttributeDisplay: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	_componentUnroll = true;
	_unroll = true;
	localContext = d2wContext;
	object = object;
}

AttributeRepetition: WORepetition {
	_unroll = true;
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

AttributeSorter: ERXSortOrder {
	displayGroup = displayGroup;
	displayKey = d2wContext.displayNameForProperty;
	key = d2wContext.sortKeyForList;
        d2wContext = d2wContext;
}

BackButton: WOHyperlink {
	action = backAction;
}

BackLink2: WOHyperlink {
	action = backAction;
}

BackgroundColor: WOString {
	_unroll = true;
	value = d2wContext.backgroundColorForTable;
}

CheckBox2: WOSwitchComponent {
    WOComponentName = selectionWidgetName;
	checked = checked;
}

ColumnLabelRepetition: WORepetition {
	_unroll = true;
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

Conditional2: WOConditional {
	condition = shouldShowSelectAll;
}

DisplayBottomBatchNavigationConditional: WOConditional {
	condition = d2wContext.displayBottomBatchNavigation;
}

ERXNonNullConditional1: WOConditional {
	condition = hasBranchChoices;
	negate = true;
}

ERXNonNullConditional2: ERXNonNullConditional {
	condition = hasBranchChoices;
}

EditImage: WOImage {
	alt = "Edit that Object";
	border = 0;
	filename = "write-btn.gif";
	framework = "JavaDirectToWeb";
}

EditObjectHyperlink: WOHyperlink {
	action = editObjectAction;
}

EmptyMessageComponent: WOSwitchComponent {
	WOComponentName = d2wContext.emptyListComponentName;
	d2wContext = d2wContext;
}

EntityRepetition: WORepetition {
	item = object;
	list = displayGroup.displayedObjects;
}

ExcelExportButton: WOSwitchComponent {
	WOComponentName = d2wContext.excelExportButtonCompomentName;
	displayGroup = displayGroup;
	d2wContext = d2wContext;
}

ExcelExportButton2: WOSwitchComponent {
	WOComponentName = d2wContext.excelExportButtonCompomentName;
	displayGroup = displayGroup;
	d2wContext = d2wContext;
}

FilterDisplayGroupButton: ERDFilterDisplayGroupButton {
	d2wContext = d2wContext;
	displayGroup = displayGroup;
}

FilterDisplayGroupButton2: ERDFilterDisplayGroupButton {
	d2wContext = d2wContext;
	displayGroup = displayGroup;
}

Form1: WOForm {
	multipleSubmit = true;
}

Help: ERDDebuggingHelp {
	d2wContext = d2wContext;
}

HiddenField: WOHiddenField {
	value = dummy;
}

HideReturnOnSelect2: WOConditional {
	_unroll = true;
	condition = isSelecting;
	negate = true;
}

HideReturnOnSelect3: WOConditional {
	_unroll = true;
	condition = isSelecting;
	negate = true;
}

InspectImage: WOImage {
	alt = "Inspect that Object";
	border = "0";
	filename = "magglass-btn.gif";
	framework = "JavaDirectToWeb";
}

InspectObjectHyperlink: WOHyperlink {
	action = inspectObjectAction;
}

IsEntityInspectableConditional: WOConditional {
	_unroll = true;
	condition = isEntityInspectable;
}

IsEntityWritableConditional: WOConditional {
	_unroll = true;
	condition = isEntityEditable;
}

IsGenericExportButtonKnown: WOConditional {
	condition = d2wContext.excelExportButtonCompomentName;
}

IsGenericExportButtonKnown2: WOConditional {
	condition = d2wContext.excelExportButtonCompomentName;
}

IsPropertySortable: WOConditional {
	_unroll = true;
	condition = d2wContext.propertyIsSortable;
}

ListEmpty: WOConditional {
	condition = isListEmpty;
}

ListNotEmpty: WOConditional {
	condition = isListEmpty;
	negate = true;
}

ListTable: WOGenericContainer {
	_unroll = true;
	bgcolor = d2wContext.backgroundColorForTable;
	border = 0;
	cellpadding = 1;
	cellspacing = 0;
	elementName = "Table";
}

ListTableHeaderRow: WOGenericContainer {
	_unroll = true;
	bgcolor = "#ffffff";
	elementName = "tr";
}

ListTableRow: WOGenericContainer {
	_unroll = true;
	elementName = "tr";
}

NavBar: ERXBatchNavigationBarInForm {
	bgcolor = backgroundColorForTable;
	displayGroup = displayGroup;
	objectName = d2wContext.displayNameForEntity;
	textColor = d2wContext.textColor;
	width = 550;
        d2wContext = d2wContext;
}

NavBar2: ERXBatchNavigationBarInForm {
	bgcolor = backgroundColorForTable;
	displayGroup = displayGroup;
	objectName = d2wContext.displayNameForEntity;
	textColor = d2wContext.textColor;
        d2wContext = d2wContext;
}

NumberOfItems: WOString {
	value = listSize;
}

PageWrapper: WOSwitchComponent {
	WOComponentName = d2wContext.pageWrapperName;
}

Repetition1: WORepetition {
	item = branch;
	list = branchChoices;
}

ReturnButton2: WOImage {
	alt = "Returns to the previous page";
	border = 0;
	filename = "ReturnMetalBtn.gif";
	framework = "JavaDirectToWeb";
	name = "Returns to the previous page";
}

ShowCancel: WOConditional {
	condition = showCancel;
}

ShowCancel2: WOConditional {
	condition = showCancel;
}

SubmitButton1: WOSubmitButton {
	action = backAction;
	value = d2wContext.pickButtonLabel;
}

SubmitButton2: WOSubmitButton {
	action = nextPage;
	value = "Cancel";
}

SubmitButton3: WOSubmitButton {
	action = backAction;
	value = branch.branchButtonLabel;
}

SubmitButton4: WOSubmitButton {
	action = selectAll;
	value = "Select All";
	onClick = "return createTarget(form, '_self')";
}

SubmitButton5: WOSubmitButton {
	action = unselectAll;
	value = "Clear Selection";
	onClick = "return createTarget(form, '_self')";
}

SubmitButton6: WOSubmitButton {
	action = selectAllOnPage;
	value = "Select All On Page";
}

SwitchComponent1: WOSwitchComponent {
	WOComponentName = d2wContext.propertyNameComponentName;
	localContext = d2wContext;
}
