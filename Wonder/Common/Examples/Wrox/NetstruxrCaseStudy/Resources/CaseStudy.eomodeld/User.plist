{
    attributes = (
        {
            columnName = email; 
            externalType = char; 
            name = email; 
            valueClassName = NSString; 
            width = 50; 
        }, 
        {
            columnName = PASSWORD; 
            externalType = char; 
            name = encryptedPassword; 
            valueClassName = NSString; 
            width = 50; 
        }, 
        {
            columnName = first_name; 
            externalType = char; 
            name = firstName; 
            valueClassName = NSString; 
            width = 50; 
        }, 
        {
            columnName = id; 
            externalType = int; 
            name = id; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = last_name; 
            externalType = char; 
            name = lastName; 
            valueClassName = NSString; 
            width = 50; 
        }, 
        {
            columnName = USERNAME; 
            externalType = char; 
            name = username; 
            valueClassName = NSString; 
            width = 50; 
        }
    ); 
    attributesUsedForLocking = (id, firstName, lastName, email, username, encryptedPassword); 
    className = er.wrox.User; 
    classProperties = (firstName, lastName, email, groups, username, encryptedPassword, preferences); 
    externalName = user; 
    name = User; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            deleteRule = EODeleteRuleCascade; 
            destination = UserGroup; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = userID; sourceAttribute = id; }); 
            name = groupUsers; 
            propagatesPrimaryKey = Y; 
        }, 
        {definition = groupUsers.group; joinSemantic = EOInnerJoin; name = groups; }, 
        {
            destination = Preference; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = userID; sourceAttribute = id; }); 
            name = preferences; 
        }
    ); 
}
