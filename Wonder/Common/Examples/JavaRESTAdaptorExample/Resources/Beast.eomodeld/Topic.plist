{
    attributes = (
        {
            allowsNull = N; 
            columnName = "created-at"; 
            name = createdAt; 
            prototypeName = dateTime; 
        }, 
        {allowsNull = N; columnName = "forum-id"; name = forumID; prototypeName = id; }, 
        {allowsNull = N; columnName = hits; name = hits; prototypeName = intNumber; }, 
        {allowsNull = N; name = id; prototypeName = id; }, 
        {
            allowsNull = N; 
            columnName = "last-post-id"; 
            name = lastPostID; 
            prototypeName = intNumber; 
        }, 
        {allowsNull = N; columnName = locked; name = locked; prototypeName = boolean; }, 
        {
            allowsNull = N; 
            columnName = "posts-count"; 
            name = postsCount; 
            prototypeName = intNumber; 
        }, 
        {
            allowsNull = N; 
            columnName = "replied-at"; 
            name = repliedAt; 
            prototypeName = dateTime; 
        }, 
        {
            allowsNull = N; 
            columnName = "replied-by"; 
            name = repliedByID; 
            prototypeName = id; 
        }, 
        {
            allowsNull = N; 
            columnName = sticky; 
            name = sticky; 
            prototypeName = intNumber; 
        }, 
        {
            allowsNull = N; 
            columnName = title; 
            name = title; 
            prototypeName = varcharLarge; 
        }, 
        {
            allowsNull = N; 
            columnName = "updated-at"; 
            name = updatedAt; 
            prototypeName = dateTime; 
        }, 
        {allowsNull = N; columnName = "user-id"; name = userID; prototypeName = id; }
    ); 
    attributesUsedForLocking = (
        createdAt, 
        forumID, 
        hits, 
        id, 
        lastPostID, 
        locked, 
        postsCount, 
        repliedAt, 
        repliedByID, 
        sticky, 
        title, 
        updatedAt, 
        userID
    ); 
    className = "se.caboo.beast.model.Topic"; 
    classProperties = (
        createdAt, 
        forum, 
        hits, 
        locked, 
        posts, 
        postsCount, 
        repliedAt, 
        repliedBy, 
        sticky, 
        title, 
        updatedAt, 
        user
    ); 
    externalName = "/forums/[forumID]/topics,topic,topics"; 
    fetchSpecificationDictionary = {}; 
    name = Topic; 
    primaryKeyAttributes = (id); 
    relationships = (
        {
            destination = Forum; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = forumID; }); 
            name = forum; 
        }, 
        {
            destination = Post; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = (
                {destinationAttribute = forumID; sourceAttribute = forumID; }, 
                {destinationAttribute = topicID; sourceAttribute = id; }
            ); 
            name = posts; 
        }, 
        {
            destination = User; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = repliedByID; }); 
            name = repliedBy; 
        }, 
        {
            destination = User; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = id; sourceAttribute = userID; }); 
            name = user; 
        }
    ); 
}
