AttributeCell: WOGenericContainer {
	_unroll = YES;
	align = d2wContext.justification;
	elementName = "td";
	valign = "middle";
}

AttributeDisplay: WOSwitchComponent { 
	WOComponentName = d2wContext.componentName;
	_componentUnroll = YES;
	_unroll = YES;
	localContext = d2wContext;
	object = object;
}

AttributeRepetition: WORepetition {
	_unroll = YES;
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

AttributeSorter: ERXSortOrder {
	displayGroup = displayGroup;
	displayKey = d2wContext.displayNameForProperty;
	key = d2wContext.sortKeyForList;
        d2wContext = d2wContext;
}

BackButton: WOHyperlink {
	action = backAction;
}

BackLink: WOHyperlink {
	action = backAction;
}

BackLink2: WOHyperlink {
	action = backAction;
}

BackgroundColor: WOString {
	_unroll = YES;
	value = d2wContext.backgroundColorForTable;
}

Banner: WOImage {
	border = "0";
	filename = d2wContext.bannerFileName;
	framework = "JavaDirectToWeb";
}

BannerConditional: WOConditional {
	_unroll = YES;
	condition = showBanner;
}

ColumnLabelRepetition: WORepetition {
	_unroll = YES;
	item = d2wContext.propertyKey;
	list = d2wContext.displayPropertyKeys;
}

Conditional1: WOConditional {
	condition = d2wContext.hasPrinterFriendlyVersion;
}

Conditional2: ERXNonZeroConditional {
	condition = session.getUser.isAdmin;
}

DeleteEO2: WOHyperlink {
	action = deleteObjectAction;
}

DeleteImage2: WOImage {
	alt = "Delete that Object";
	border = 0;
	filename = "trashcan-btn.gif";
	framework = "JavaDirectToWeb";
}

EditEO: WOHyperlink {
	action = editObjectAction;
}

EditImage: WOImage {
	alt = "Edit that Object";
	border = "0";
	filename = "write-btn.gif";
	framework = "JavaDirectToWeb";
}

EntityName: WOString {
	_unroll = YES;
	value = d2wContext.displayNameForEntity;
}

EntityRepetition: WORepetition {
	item = object;
	list = displayGroup.displayedObjects;
}

ExclamationImage: WOImage {
	border = "0";
	filename = "exclamation.gif";
	framework = "JavaDirectToWeb";
}

FilterDisplayGroupButton: ERDFilterDisplayGroupButton {
	d2wContext = d2wContext;
	displayGroup = displayGroup;
}

FontContainer: WOGenericContainer {
	color = d2wContext.textColor;
	elementName = "font";
}

HideReturnOnSelect1: WOConditional {
	_unroll = YES;
	condition = isSelectingNotTopLevel;
	negate = YES;
}

HideReturnOnSelect2: WOConditional {
	_unroll = YES;
	condition = isSelectingNotTopLevel;
	negate = YES;
}

HideReturnOnSelect3: WOConditional {
	_unroll = YES;
	condition = isSelectingNotTopLevel;
	negate = YES;
}

Image2: WOImage {
	filename = "printer.gif";
	framework = "ERExtensions";
	border = "0";
}

InspectEO: WOHyperlink {
	action = inspectObjectAction;
}

InspectImage: WOImage {
	alt = "Inspect that Object";
	border = "0";
	filename = "magglass-btn.gif";
	framework = "JavaDirectToWeb";
}

IsEntityNotWritable: WOConditional {
	_unroll = YES;
	condition = isEntityInspectable;
}

IsEntityWritable: WOConditional {
	_unroll = YES;
	condition = isEntityReadOnly;
	negate = YES;
}

IsEntityWritable2: WOConditional {
	_unroll = YES;
	condition = d2wContext.isEntityDeletable;
	negate = NO;
}

IsListing: WOConditional {
	_unroll = YES;
	condition = isSelecting;
	negate = YES;
}

IsListing2: WOConditional {
	_unroll = YES;
	condition = isSelecting;
	negate = YES;
}

IsPropertySortable: WOConditional {
	_unroll = YES;
	condition = d2wContext.propertyIsSortable;
}

IsSelecting: WOConditional {
	_unroll = YES;
	condition = isSelecting;
}

ListEmpty: WOConditional {
	condition = isListEmpty;
}

ListNotEmpty: WOConditional {
	condition = isListEmpty;
	negate = YES;
}

ListTable: WOGenericContainer {
	_unroll = YES;
	bgcolor = d2wContext.backgroundColorForTable;
	border = 0;
	cellpadding = 1;
	cellspacing = 0;
	elementName = "Table";
}

ListTableHeaderRow: WOGenericContainer {
	_unroll = YES;
	bgcolor = "#ffffff";
	elementName = "tr";
}

ListTableRow: WOGenericContainer {
	_unroll = YES;
	elementName = "tr";
//	bgcolor = backgroundColorForRow;
}

MassModifyButton: ERDMassModifyButton {
	d2wContext = d2wContext;
	list = displayGroup.allObjects;
}

NavBar: ERXBatchNavigationBar {
	bgcolor = backgroundColorForTable;
	displayGroup = displayGroup;
	objectName = d2wContext.displayNameForEntity;
	textColor = d2wContext.textColor;
	width = 550;
        d2wContext = d2wContext;
}

NonNullConditional1: ERXNonNullConditional {
	condition = d2wContext.headComponentName;
}

NumberOfItems: WOString {
	value = listSize;
}
PageWrapper: WOSwitchComponent {
	WOComponentName = d2wContext.pageWrapperName;
	_componentUnroll = YES;
	_unroll = YES;
}

PrinterFriendlyLink: ERXJSOpenWindowHyperlink {
	action = printerFriendlyVersion;
	scrollbars = YES;
	target = "PrinterFriendly";
}

PropertyName: WOString {
	_unroll = YES;
	value = d2wContext.displayNameForProperty;
}

ReturnButton: WOImage {
	alt = "Returns to the previous page";
	border = "0";
	filename = "ReturnMetalBtn.gif";
	framework = "JavaDirectToWeb";
	name = "Returns to the previous page";
}

ReturnButton2: WOImage {
	alt = "Returns to the previous page";
	border = 0;
	filename = "ReturnMetalBtn.gif";
	framework = "JavaDirectToWeb";
	name = "Returns to the previous page";
}

SelectEO: WOHyperlink {
	action = selectObjectAction;
}

SelectImage: WOImage {
	alt = "Select that Object";
	border = "0";
	filename = "SelectMetalSmBtn.gif";
	framework = "JavaDirectToWeb";
}

ShowCancel: WOConditional {
	condition = showCancel;
}

ShowCancel2: WOConditional {
	condition = showCancel;
}

SwitchComponent1: WOSwitchComponent {
	WOComponentName = d2wContext.headComponentName;
	d2wContext = d2wContext;
}

