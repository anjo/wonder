// Generated by the WebObjects Wizard Tue Aug 22 11:02:18 US/Eastern 2000

package com.uw.shared;

import com.webobjects.foundation.*;
import com.webobjects.appserver.*;
import com.webobjects.eocontrol.*;
import com.webobjects.eoaccess.*;
import java.net.URL;

public class LoginPanel extends BaseComponent {
    public String login;
    public String password;

    public String parentLoginCheck;
    public String databaseEntity;
    public String databaseKeyForLogin;
    public String databaseKeyForPassword;
    public String databaseKeyForEmail;
    public NSArray databaseResults;
    public int databaseKeyLoginSize;
    public int databaseKeyPasswordSize;
    public boolean saveUserPermissions = false;
    public boolean activateCookies = false;

    public LoginPanel(WOContext aContext) {
        super(aContext);
    }

    
    // populate the user login and password fields if cookies exist, and the main app has not bypassed it directly.
    public void awake() {
        login = context().request().cookieValueForKey("login_" + context().request().applicationName());
        password = context().request().cookieValueForKey("password_" + context().request().applicationName());

        if (login!=null && password!=null) saveUserPermissions=true;
    }

    public WOResponse modifyResponse(WOResponse aResponse)
    {

        if (login!=null && password!=null) {

            try {
                String hostname = (new URL(application().cgiAdaptorURL())).getHost();
                String path = context().request().adaptorPrefix() + "/" + context().request().applicationName();
                NSTimestamp expiryDate;
                int timeout = -1;

                if (saveUserPermissions) {
                    expiryDate = new NSTimestamp(2035,1,1,0,0,0,null);
                    timeout = 15552000;
                }
                else expiryDate = new NSTimestamp(1980,1,1,0,0,0,null);

                WOCookie loginCookie = new WOCookie("login_" + context().request().applicationName(),login);
                WOCookie passwordCookie = new WOCookie("password_" + context().request().applicationName(),password);
                
                // loginCookie.setDomain(hostname);
                // passwordCookie.setDomain(hostname);
                loginCookie.setPath(path);
                passwordCookie.setPath(path);
                loginCookie.setExpires(expiryDate);
                passwordCookie.setExpires(expiryDate);
                loginCookie.setTimeOut(timeout);
                passwordCookie.setTimeOut(timeout);
                
                aResponse.addCookie(loginCookie);
                aResponse.addCookie(passwordCookie);

            }
            catch (Exception e) {
                System.out.println(e);
            }
        }


        return aResponse;
    }
    
    public WOResponse loginCheck() {
        
        // Initialize your component here
        if (login==null || password == null) {
            System.out.println("no login or password");
            return null;
        }
        
        NSDictionary loginBindings = new NSDictionary(new Object[] {login,password},new Object[] {databaseKeyForLogin,databaseKeyForPassword});

        try {
            databaseResults = EOUtilities.objectsMatchingValues(session().defaultEditingContext(), databaseEntity, loginBindings);
        }
        catch (Exception e) {
            System.out.println(e);
        }

        WOActionResults pageToReturn = (WOActionResults) performParentAction(parentLoginCheck);
        WOResponse responseToModify = pageToReturn.generateResponse();

        return this.modifyResponse(responseToModify);
        
    }

    public WOComponent forgotPassword()
    {
        if (login==null) message = "Please enter your Login name.";
        else {
            NSDictionary loginBindings = new NSDictionary(new Object[] {login},new Object[] {databaseKeyForLogin});

            try {
                databaseResults = EOUtilities.objectsMatchingValues(session().defaultEditingContext(), databaseEntity, loginBindings);
            }
            catch (Exception e) {
                System.out.println(e);
            }

            if (databaseResults.count()==1 && databaseKeyForEmail!=null) {
                Object foundUser = databaseResults.objectAtIndex(0);
                WOMailDelivery mailer = WOMailDelivery.sharedInstance();
                mailer.composePlainTextEmail("donotreply@null.com", new NSArray(((EOGenericRecord) foundUser).valueForKey(databaseKeyForEmail)), null, "Your " + context().request().applicationName() + " password", "Password for  " + login + " is: " + ((EOGenericRecord) foundUser).valueForKey(databaseKeyForPassword), true);
                message = "Password emailed to your account.";
            }
            else message = "Your login was not found, sorry.";
        }
        return null;
    }

}
