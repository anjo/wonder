<?xml version="1.0"?>

<project name="Utils" basedir="../..">
    <target name="usage" depends="global.properties">
    
	<echo>

There are many ways to use this script:

1) from the command line to build the whole of WONDER
		build   --> create in ${build.root}
		install --> copy to ${wo.local.root}
		web     --> copy to ${wo.server.root}
		clean   --> remove .classes, .framework or .woa

2) to build your own projects that have the same layout as a wonder project
        ant -emacs -f ~/Wonder/Build/build/generic.xml  \
		-Dproject.type=application \
		-Dproject.name=SomeProject \
		-Dproject.principal.class=com.company.Application \
		-Dproject.dir=/path/to/my/SomeProject \
		-Dwo.external.root.bundles=Some/Root/Framework/Or/Other \
		-Dwo.external.root.bundles.embed=true \
		-Dwo.local.bundles=Some/Library/Framework/Or/Other \
		-Dwo.local.bundles.embed=true \
		-Dwo.system.bundles=Some/Library/Framework/Or/Other \
		-Dwo.system.bundles.embed=true \
		generic.MODE

    or shorter:
    
        ant -emacs -f ~/Wonder/Build/build/generic.xml  \
		-propertyfile=build.properties
                generic.MODE
    
    where "build.properties" is a file with the options above in
    java-property format. 

    Leave out any option you don't want. Valid entries MODEs are:

		build  	--> create in ${build.root}
		install --> copy to ${wo.local.root}
		web     --> copy to ${wo.server.root}
		clean   --> remove .classes, .framework or .woa

    For MODE "install", "clean" and "web" it is sufficient to call:

        ant -emacs -f ~/Wonder/Build/build/generic.xml  \
		-Dproject.type=application \
		-Dproject.name=SomeProject \
		generic.MODE
	</echo>
    </target>

    <!-- When you add another sub-project, use this as a template
         We strongly encourage you to use one of the provided 
         templates or mimic the structure
             SomeProject/
                Sources/
                Resources/
                WebServerResources/
                Components/
         when you create a new project.
         Additionally, you might want to add your subproject in the dependency hierachy
         and add it to the "all.web" "all.clean" and "all.install" tasks 
     -->

    <target name="SomeNewProject.all">
         <!-- project.type, either "global.application" or "global.framework" -->
         <antcall target="global.application.${build.action}" >

            <!-- princical class if the framework or Application class -->
            <param name="project.principal.class" value="com.company.Application" />

            <!-- Name of the framework or application -->
            <param name="project.name" value="SomeNewProject" />

            <!-- Path where the project resides, can be absolute -->
            <param name="project.dir" value="/path/to/your/project" />
        </antcall>
    </target>
    <!-- /When you add another sub-project, use this as a template -->

    <target name="generic">
        <antcall target="generic.all" />
    </target>
    
    <target name="generic.all">
        <antcall target="generic.build" />
    </target>
    
    <target name="generic.build">
        <condition property="project.principal.class" value="${principalClass}">
            <and><isset property="principalClass" /><not><isset property="project.principal.class" /></not></and>
        </condition>
        <antcall target="global.${project.type}.build" >
            <param name="project.principal.class" value="${project.principal.class}" />
            <param name="project.name" value="${project.name}" />
            <param name="project.dir" value="${project.dir}" />
        </antcall>
    </target>
    <target name="generic.clean">
        <antcall target="global.${project.type}.clean" >
            <param name="project.name" value="${project.name}" />
        </antcall>
    </target>
    <target name="generic.install">
        <antcall target="global.${project.type}.install" >
            <param name="project.name" value="${project.name}" />
        </antcall>
    </target>
    <target name="generic.web">
        <antcall target="global.${project.type}.web" >
            <param name="project.name" value="${project.name}" />
        </antcall>
    </target>
    <target name="global.dummy" />
   
   <target name="global.environment">
        <property name="wonder.root" value="${basedir}" />
        <property file="${wonder.root}/build.properties" />
        <property file="${user.home}/Library/Application Support/WOLips/wolips.properties" />
        <property file="${wonder.root}/Build/build/default.properties" />

        <!-- default values. can be overridden by *.properties files or -D options. -->
        <property name="before.compile" value="global.dummy" />
        <property name="after.compile" value="global.dummy" />
        <property name="before.build" value="global.dummy" />
        <property name="after.build" value="global.dummy" />
        <property name="project.customInfo.plist" value="" />

        <condition property="build.root" value="${wo.external.root}" else="${user.home}/Roots">
            <isset property="wo.external.root" />
        </condition>
        
        <property name="build.classes" value="${build.root}/classes/${project.name}" />
        <property name="wo.system.root" value="/System" />
        <property name="wo.system.frameworks" value="${wo.system.root}/Library/Frameworks" />
        <property name="wo.local.root" value="/" />
        <property name="wo.local.frameworks" value="${wo.local.root}/Library/Frameworks" />
        <property name="wo.external.root" value="${build.root}" />
        <property name="wo.external.frameworks" value="${wo.external.root}" />
        <property name="wo.system.root.bundles" value="JavaFoundation/JavaEOAccess/JavaEOControl/JavaWebObjects/JavaWOJSPServlet/JavaJDBCAdaptor/JavaXML" />
        <property name="wo.system.root.bundles.embed" value="false" />
        <property name="wo.external.root.bundles.embed" value="false" />
        <property name="wo.local.root.bundles.embed" value="false" />
        <property name="wonder.development" value="true" />
        <property name="wonder.local.deployment.dir" value="${wo.local.frameworks}" />
        <property name="wonder.system.deployment.dir" value="${wo.system.frameworks}" />
        
        <!-- if project.type is application and wonder.development is false, use installed frameworks, 
             otherwise use development frameworks. --> 
        <condition property="wonder.lib.root" value="${wo.local.root}/Library/Frameworks">
            <and>
                <equals arg1="${project.type}" arg2="application" />
                <isfalse value="${wonder.development}"/>
            </and>
        </condition>
        <property name="wonder.lib.root" value="${build.root}" />
        <property name="wonder.framework.install.root" value="${wo.local.frameworks}" />
        <property name="wonder.jar.install.root" value="${wo.local.root}/Library/WebObjects/lib" />
        <property name="web.framework.install.root" value="${wo.server.root}/Frameworks" />
        <property name="wonder.application.install.root" value="${wo.local.root}/Library/WebObjects/JavaApplications" />
        <property name="web.application.install.root" value="${wo.server.root}" />
        <!-- just some existing value -->
        <property name="project.sources.dir" value="${project.dir}/Sources" />
        <property name="patches.dir" value="${wonder.root}/Build/build" />
        <property name="classes.exclude.0" value="does_not_exists_hopefully" />
        <property name="classes.exclude.1" value="does_not_exists_hopefully" />
        <property name="classes.exclude.2" value="does_not_exists_hopefully" />
        <tempfile property="manifest.mf.temp" deleteonexit="true" />
        <condition property="manifest.mf" value="${project.dir}/manifest.mf" else="${manifest.mf.temp}" >
            <available file="${project.dir}/manifest.mf" type="file" />
        </condition>
    </target>

    <target name="global.properties" depends="global.environment">
        <property name="framework.name" value="${project.name}.framework" />
        <property name="build.framework.dir" value="${build.root}/${framework.name}" />
    </target>

    <target name="global.prepare" depends="global.properties">
        <path id="ant.classpath">
            <fileset dir="${wonder.root}/Build/">
                <include name="lib/*.jar"/>
            </fileset>
        </path>
        <mkdir dir="${project.dir}/Libraries" />
        <mkdir dir="${project.sources.dir}" />
        <mkdir dir="${project.dir}/Resources" />
        <mkdir dir="${project.dir}/Components" />
        <mkdir dir="${project.dir}/WebServerResources" />
        <mkdir dir="${build.root}" />
        <mkdir dir="${build.classes}" />
		<echo message="" file="${manifest.mf}" append="true" />
    </target>

    <target name="dist.properties" depends="global.environment">
        <property name="project.source.dir" value="${wonder.root}/${project.dir}" />
    </target>

    <target name="global.framework.dist" depends="dist.properties">
        <property name="framework.name" value="${project.name}.framework" />

        <copy todir="${dist.dir}/Frameworks/${framework.name}">
            <fileset dir="${build.root}/${framework.name}" />
        </copy>

        <mkdir dir="${build.root}/${framework.name}/WebServerResources" />
        <copy todir="${dist.dir}/WebServerResources/Frameworks/${framework.name}" includeEmptyDirs="false">
            <fileset dir="${build.root}/${framework.name}/WebServerResources" />
        </copy>

        <mkdir dir="${project.source.dir}/Documentation" />
        <copy todir="${dist.dir}/Documentation/Frameworks/${framework.name}" includeEmptyDirs="false">
            <fileset dir="${project.source.dir}/Documentation">
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>

        <mkdir dir="${project.source.dir}/Support" />
        <copy todir="${dist.dir}/Documentation/Frameworks/${framework.name}/Support" includeEmptyDirs="false">
            <fileset dir="${project.source.dir}/Support">
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
    </target>

    <target name="global.application.dist" depends="dist.properties">
        <property name="application.name" value="${project.name}.woa" />

        <copy todir="${dist.dir}/Applications/${application.name}">
            <fileset dir="${build.root}/${application.name}" />
        </copy>
        
        <chmod file="${dist.dir}/Applications/${application.name}/${project.name}" perm="ugo+rx"/>

        <mkdir dir="${build.root}/${application.name}/Contents/WebServerResources" />
        <copy todir="${dist.dir}/WebServerResources/${application.name}/Contents/WebServerResources" includeEmptyDirs="false">
            <fileset dir="${build.root}/${application.name}/Contents/WebServerResources" />
        </copy>

        <mkdir dir="${project.source.dir}/Documentation" />
        <copy todir="${dist.dir}/Documentation/Applications/${project}" includeEmptyDirs="false">
            <fileset dir="${project.source.dir}/Documentation">
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>

        <mkdir dir="${project.source.dir}/Support" />
        <copy todir="${dist.dir}/Documentation/Applications/${project}/Support" includeEmptyDirs="false">
            <fileset dir="${project.source.dir}/Support">
                <exclude name="**/CVS/*" />
            </fileset>
        </copy>
    </target>

    <target name="global.compile" depends="global.environment,global.prepare">
         <taskdef name="wocompile" classname="org.objectstyle.woproject.ant.WOCompile">
            <classpath refid="ant.classpath"/>
        </taskdef>
         
       <antcall target="${before.compile}" />
       <wocompile srcdir="${project.sources.dir}" destdir="${build.classes}" debug="on" optimize="off" deprecation="off" source="${compiler.source}" target="${compiler.target}" >
       <!--compilerarg value="-Xlint:unchecked" /-->
                    <exclude name="${classes.exclude.0}" />
                    <exclude name="${classes.exclude.1}" />
                    <exclude name="${classes.exclude.2}" />
            <classpath>
                <fileset dir="${project.dir}/Libraries">
                    <include name="**/*.jar" />
                    <!-- ak: i know, fix this...-->
                </fileset>
            </classpath>
            <!-- ak: must NOT be a copy of WOApp, as deploymentDir doesn't work here -->
           <frameworks root="External" if="wo.external.root.bundles" bundles="${wo.external.root.bundles}" embed="${wo.external.root.bundles.embed}" dir="${wo.external.root}" />
           <frameworks root="Local"    if="wo.local.root.bundles" bundles="${wo.local.root.bundles}" embed="${wo.local.root.bundles.embed}" dir="${wo.local.root}"/>
           <frameworks root="System"   if="wo.system.root.bundles" bundles="${wo.system.root.bundles}" embed="${wo.system.root.bundles.embed}" dir="${wo.system.frameworks}"/>
        </wocompile>
        <antcall target="${after.compile}" />
    </target>

    <target name="global.unjar" if="bundle.jars">
        <unzip dest="${build.classes}">
            <fileset dir="${project.dir}/Libraries">
                <include name="*.jar"/>
            </fileset>
        </unzip>
    </target>

    <target name="global.framework.build" depends="global.properties,global.compile,global.unjar">
        <mkdir dir="${build.framework.dir}" />
        <taskdef name="woframework" classname="org.objectstyle.woproject.ant.WOFramework">
            <classpath refid="ant.classpath"/>
        </taskdef>

        <antcall target="${before.build}" />
        <woframework name="${project.name}" destDir="${build.root}" principalClass="${project.principal.class}" jarName="${project.name}" version="${project.version}" CFBundleVersion="${project.name} ${project.version}" CFBundleShortVersion="${project.version}" customInfoPListContent="${project.customInfo.plist}">
            <lib dir="${project.dir}/Libraries">
                <include name="**/*.jar" />
            </lib>
            <classes dir="${build.classes}">
                <include name="**/*.class" />
                    <exclude name="${classes.exclude.0}" />
                    <exclude name="${classes.exclude.1}" />
                    <exclude name="${classes.exclude.2}" />
            </classes>
            <classes dir="${project.sources.dir}">
                <include name="**/*" />
                <exclude name="**/*.class" />
                <exclude name="**/*.java" />
                <exclude name="**/.svn" />
                <exclude name="**/CVS" />
            </classes>
            <sources dir="${project.sources.dir}" if="include.source">
                <include name="**/*.java" />
            </sources>
            <resources dir="${project.dir}/Components">
                <include name="**.api" />
                <include name="**/*.wo/**" />
            </resources>
            <resources dir="${project.dir}/Resources">
                <include name="**/*" /> 
                <exclude name="*.*~/" />
            </resources>
            <wsresources dir="${project.dir}/WebServerResources">
                <include name="**/*" />
            </wsresources>
        </woframework>
        <jar destfile="${build.root}/${project.name}-${project.version}.jar" manifest="${manifest.mf}">
            <fileset dir="${build.classes}">
                    <exclude name="${classes.exclude.0}" />
                    <exclude name="${classes.exclude.1}" />
                    <exclude name="${classes.exclude.2}" />
            </fileset>
            <fileset dir="${build.root}/${project.name}.framework/" includes="Resources/**/*" excludes="**/*.jar"/>
            <fileset dir="${build.root}/${project.name}.framework/" includes="WebServerResources/**/*"/>
        </jar>
       <antcall target="${after.build}" />

        <echo message="-------------------------------------" />
        <echo message="${project.name}.framework done" />
        <echo message="-------------------------------------" />
    </target>

    <target name="global.application.build" depends="global.properties,global.compile,global.unjar" >

        <taskdef name="woapplication" classname="org.objectstyle.woproject.ant.WOApplication">
            <classpath refid="ant.classpath"/>
        </taskdef>

        <antcall target="${before.build}" />
        <woapplication name="${project.name}" destDir="${build.root}" principalClass="${project.principal.class}" jarName="${project.name}" version="${project.version}">
            <classes dir="${build.classes}">
                <include name="**/*.class" />
                <exclude name=".svn" />
                <exclude name=".CVS" />
            </classes>
            <classes dir="${project.sources.dir}">
                <include name="**/*" />
                <exclude name="**/*.java" />
                <exclude name="**/*.class" />
                <exclude name="**/.svn" />
                <exclude name="**/CVS" />
            </classes>
            <sources dir="${project.sources.dir}" if="include.source">
                <include name="**/*.java" />
            </sources>
            <lib dir="${project.dir}/Libraries">
                <include name="**/*.jar" />
            </lib>
            <resources dir="${project.dir}/Components">
                <include name="**.api" />
                <include name="**/*.wo/**" />
            </resources>
            <resources dir="${project.dir}/Resources">
                <include name="**/*" /> 
            </resources>
            <wsresources dir="${project.dir}/WebServerResources">
                <include name="**/*" />
            </wsresources>
            
            <!-- this should be an exact copy of the frameworks in the woapplication task --> 
           <frameworks root="External"  dir="${wo.external.root}" if="wo.external.root.bundles" bundles="${wo.external.root.bundles}" embed="${wo.external.root.bundles.embed}" deploymentDir="${wonder.local.deployment.dir}"/>
           <frameworks root="Local"    if="wo.local.root.bundles" bundles="${wo.local.root.bundles}" embed="${wo.local.root.bundles.embed}" deploymentDir="${wonder.local.deployment.dir}"/>
           <frameworks root="System"   if="wo.system.root.bundles" bundles="${wo.system.root.bundles}" embed="${wo.system.root.bundles.embed}" deploymentDir="${wonder.system.deployment.dir}"/>
        </woapplication>
        <exec dir="${build.root}/${project.name}.woa" executable="/bin/chmod" os="Mac OS X">
            <arg line="a+rx ${project.name}" />
        </exec>
        <exec dir="${build.root}/${project.name}.woa/Contents/MacOS" executable="/bin/chmod" os="Mac OS X">
            <arg line="a+rx ${project.name}" />
        </exec>
       <antcall target="${after.build}" />
    </target>

    <target name="global.framework.install" depends="global.properties">
        <sync todir="${wonder.framework.install.root}/${project.name}.framework">
            <fileset dir="${build.root}/${project.name}.framework" />
        </sync>
        <copy todir="${wonder.jar.install.root}/">
            <fileset file="${build.root}/${project.name}-${project.version}.jar" />
            <fileset file="${project.dir}/Libraries/*.jar" />
        </copy>
    </target>

    <target name="global.application.install" depends="global.properties">
         <mkdir dir="${wonder.application.install.root}" />
         <sync todir="${wonder.application.install.root}/${project.name}.woa">
            <fileset dir="${build.root}/${project.name}.woa" />
        </sync>
        <exec dir="${wonder.application.install.root}/${project.name}.woa" executable="/bin/chmod" os="Mac OS X">
            <arg line="a+x ${project.name}" />
        </exec>
    </target>
    
    <!-- compatibility with prior scripts -->
    <target name="global.framework" depends="global.framework.build">
    </target>
    <target name="global.application" depends="global.application.build">
    </target>
    <!-- /compatibility -->
    
    <target name="global.framework.web" depends="global.properties">
        <mkdir dir="${web.framework.install.root}/${project.name}.framework" />
        <mkdir dir="${build.root}/${project.name}.framework/WebServerResources" />
        <sync todir="${web.framework.install.root}/${project.name}.framework/WebServerResources">
            <fileset dir="${build.root}/${project.name}.framework/WebServerResources" />
        </sync>
    </target>
	
    <target name="global.application.web" depends="global.properties">
        <mkdir dir="${web.application.install.root}/${project.name}.woa" />
        <mkdir dir="${web.application.install.root}/${project.name}.woa/Contents" />
        <sync todir="${web.application.install.root}/${project.name}.woa/Contents/WebServerResources">
            <fileset dir="${build.root}/${project.name}.woa/Contents/WebServerResources" />
        </sync>
    </target>
	
    <target name="global.framework.clean" depends="global.properties">
        <delete dir="${build.classes}" />
        <delete dir="${build.root}/${project.name}.framework" />
    </target>
	
    <target name="global.application.clean" depends="global.properties">
        <delete dir="${build.classes}" />
        <delete dir="${build.root}/${project.name}.woa" />
    </target>
</project>
