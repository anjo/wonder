JavaRebel lets you do rapid development by allowing dynamic class modification and
reloading including method signature changes which are not support by Hot Code replace.
While JavaRebel will work with WebObjects on its own, the WOJavaRebel framework 
provides some additional functionality to make it more WO friendly. 
Specifically these additions include:
  o Flushing KVC caches when a class is modified
  o Clearing ClassNotFound results from the class cache
  o Clearing the component definition cache when a WOComponent is modified
  o Adding WOLips IDE Project support to WO 5.3 (already in WO 5.4)

Firstly you must be using JavaRebel, it can be obtained from www.zeroturnaround.com, a copy
of the javarebel.jar can also be found in the framework's Libraries folder.

To use it add the following Java VM arguments to your launch configuration:
    -noverify -javaagent:<pathtojar>/javarebel.jar

Next you must add the WOJavaRebel framework to the application's classpath.
The easiest way to do this is to simply add it as a regular WebObjects framework.
While it will cause no harm in deployment, if you don't want the framework to be embedded or
appear in the classpath of your deployment builds an alternative option is to add the jar 
version of the framework to your application classpath.
 
If you are using WO 5.3 try to ensure that the framework appears early in the classpath 
order, before system frameworks like JavaWebObjects.
