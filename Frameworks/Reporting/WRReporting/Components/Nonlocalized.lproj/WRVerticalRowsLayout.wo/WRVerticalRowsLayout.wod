attribLabel:WOString{
	value= attribLabel;
}

attribs:WORepetition{
	list = attributeListAtDepth;
	item = attrib;
}

colSpanTd:WOGenericContainer{
	elementName = "TD";
	bgcolor = bgcolorColSpanTd;
	colspan = horzColSpan;
}

criteriaLabel:WOString{
	value = topCriteria.label;
	escapeHTML = false;
}

depthList:WORepetition{
	count = depthCount;
	index = depth;
}

hCriteriaList: WRNestedList {
    list = topHorzGroupCriteriaList;
    item = topCriteria;
    index = currentIndex;
    level = currentLevel;
    sublist = horzSubList;
    //action = nestedListClicked;
    //isOrdered = true;
}

hCriteriaList2: WRNestedList {
    list = topHorzGroupCriteriaList;
    item = topCriteria;
    index = currentIndex;
    level = currentLevel;
    sublist = horzSubList2;
    //action = nestedListClicked;
    //isOrdered = YES;
}

horzDimensions: WORepetition { list=horzDimensions; item=hGroup;}

numberOfCrits:WORepetition{
	count = numberOfCrits;
	//index = depth;
}

recordGroupTest:WRRecordGroup{
	model = model;
	recordGroup= recordGroupTest;
	showHeadings= showRecordGroupHeadings;
	displayType = selectedRecordGroupDisplayType;
	totalToShow = recordGroupTotalToShow;
	formatForSingleTotal = recordGroupTotalFormat;
	showAsTable = showRecordGroupAsTable;
	colors = colorDict;
	totalDict = totalDict;
	reportStyle = selectedReportStyle;
}

rowSpanTd:WOGenericContainer{
	elementName = "TD";
	rowspan = vertRowSpan;
	bgcolor = bgcolorRowSpanTd;
}

rowSpanTd2:WOGenericContainer{
	elementName = "TD";
	bgcolor = bgcolorRowSpanTd;
}

showHeadersForAsCells: WOConditional{
	condition = showHeadersForAsCells;
}

showIndentCell:WOConditional{
	condition= showIndentCell;
}

showNoColNoRow:WOConditional{
	condition= showNoColNoRow;
}

showSingleCol:WOConditional{
	condition= showSingleCol;
}

showSingleRow:WOConditional{
	condition= showSingleRow;
}

td:WOGenericContainer{
	elementName = "TD";
	colspan = colSpan;
	rowspan = rowSpan;
}

vCriteriaList: WRNestedList {
    list = topVertGroupCriteriaList;
    item = topCriteriaV;
    index = currentIndexV;
    level = currentLevelV;
    sublist = vertSubList;
    //action = nestedListClicked;
    //isOrdered = YES;
}

vGroups: WORepetition { list= vertDimensions; item= vGroup;}

vIndentCriteriaLabel:WOString{
	value = vIndentCriteriaLabel;
	escapeHTML = false;
}

vcriteriaLabel:WOString{
	value = topCriteriaVLabel;
	escapeHTML = false;
}

vindent:WORepetition{
	count = vheadingCount; 
	index = vheadingIndex;
}