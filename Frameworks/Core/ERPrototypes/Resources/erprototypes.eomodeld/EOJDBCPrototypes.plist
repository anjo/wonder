{
    attributes = (
        {
            columnName = ""; 
            externalType = DECIMAL; 
            name = amount; 
            precision = 38; 
            scale = 2; 
            valueClassName = NSNumber; 
            valueType = d; 
        }, 
        {columnName = ""; externalType = BLOB; name = blob; valueClassName = NSData; }, 
        {
            adaptorValueConversionMethodName = toString; 
            columnName = ""; 
            externalType = VARCHAR; 
            factoryMethodArgumentType = EOFactoryMethodArgumentIsNSString; 
            name = boolean; 
            valueClassName = "java.lang.Boolean"; 
            valueFactoryMethodName = valueOf; 
            width = 5; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = charFlag; 
            valueClassName = NSString; 
            valueType = c; 
            width = 1; 
        }, 
        {
            adaptorValueConversionMethodName = toCryptoString; 
            columnName = ""; 
            externalType = VARCHAR; 
            factoryMethodArgumentType = EOFactoryMethodArgumentIsNSString; 
            name = cryptoString; 
            valueClassName = ERXCryptoString; 
            valueFactoryMethodName = createInstanceFromCryptoString; 
            width = 100; 
        }, 
        {
            columnName = ""; 
            externalType = DECIMAL; 
            name = currencyAmount; 
            precision = 38; 
            scale = 4; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            columnName = ""; 
            externalType = TIMESTAMP; 
            name = date; 
            valueClassName = NSCalendarDate; 
        }, 
        {
            columnName = ""; 
            externalType = TIMESTAMP; 
            name = dateTime; 
            valueClassName = NSCalendarDate; 
        }, 
        {
            columnName = ""; 
            externalType = DOUBLE; 
            name = doubleNumber; 
            valueClassName = NSNumber; 
            valueType = d; 
        }, 
        {
            columnName = ""; 
            externalType = TINYINT; 
            name = flag; 
            valueClassName = NSNumber; 
            valueType = c; 
        }, 
        {
            adaptorValueConversionMethodName = asString; 
            columnName = ""; 
            externalType = VARCHAR; 
            factoryMethodArgumentType = EOFactoryMethodArgumentIsNSString; 
            name = globalID; 
            valueClassName = ERXKeyGlobalID; 
            valueFactoryMethodName = fromString; 
            valueType = c; 
            width = 255; 
        }, 
        {
            columnName = id; 
            externalType = INTEGER; 
            name = id; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = ""; 
            externalType = INTEGER; 
            factoryMethodArgumentType = EOFactoryMethodArgumentIsNSString; 
            name = intBoolean; 
            valueClassName = NSNumber; 
            valueType = c; 
        }, 
        {
            columnName = ""; 
            externalType = INTEGER; 
            name = intNumber; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = ipAddress; 
            valueClassName = NSString; 
            valueType = c; 
            width = 39; 
        }, 
        {
            columnName = ""; 
            externalType = LONG; 
            name = longNumber; 
            valueClassName = NSNumber; 
            valueType = l; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = longText; 
            valueClassName = NSString; 
            valueType = c; 
        }, 
        {
            adaptorValueConversionMethodName = toBlob; 
            columnName = ""; 
            externalType = BLOB; 
            name = mutableArray; 
            valueClassName = ERXMutableArray; 
            valueFactoryMethodName = fromBlob; 
        }, 
        {
            adaptorValueConversionMethodName = toBlob; 
            columnName = ""; 
            externalType = BLOB; 
            name = mutableDictionary; 
            valueClassName = ERXMutableDictionary; 
            valueFactoryMethodName = fromBlob; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = osType; 
            valueClassName = NSString; 
            valueType = c; 
            width = 4; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = shortString; 
            valueClassName = NSString; 
            valueType = c; 
            width = 50; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = type; 
            valueClassName = NSString; 
            valueType = c; 
            width = 4; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar10; 
            valueClassName = NSString; 
            valueType = c; 
            width = 10; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar100; 
            valueClassName = NSString; 
            valueType = c; 
            width = 100; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar1000; 
            valueClassName = NSString; 
            valueType = c; 
            width = 1000; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar16; 
            valueClassName = NSString; 
            valueType = c; 
            width = 16; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar255; 
            valueClassName = NSString; 
            valueType = c; 
            width = 255; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varchar50; 
            valueClassName = NSString; 
            valueType = c; 
            width = 50; 
        }, 
        {
            columnName = ""; 
            externalType = VARCHAR; 
            name = varcharLarge; 
            valueClassName = NSString; 
            valueType = c; 
            width = 10000000; 
        }
    ); 
    attributesUsedForLocking = (boolean, id); 
    className = EOGenericRecord; 
    classProperties = (
        amount, 
        blob, 
        boolean, 
        charFlag, 
        cryptoString, 
        currencyAmount, 
        date, 
        dateTime, 
        doubleNumber, 
        flag, 
        globalID, 
        intBoolean, 
        intNumber, 
        ipAddress, 
        longNumber, 
        longText, 
        mutableArray, 
        mutableDictionary, 
        osType, 
        shortString, 
        type, 
        varchar10, 
        varchar100, 
        varchar1000, 
        varchar16, 
        varchar255, 
        varchar50, 
        varcharLarge
    ); 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (
            amount, 
            blob, 
            boolean, 
            charFlag, 
            cryptoString, 
            date, 
            dateTime, 
            doubleNumber, 
            flag, 
            intBoolean, 
            intNumber, 
            longNumber, 
            longText, 
            mutableArray, 
            mutableDictionary, 
            osType, 
            shortString, 
            type, 
            varchar10, 
            varchar100, 
            varchar1000, 
            varchar16, 
            varchar255, 
            varchar50, 
            varcharLarge
        ); 
    }; 
    isAbstractEntity = Y; 
    name = EOJDBCPrototypes; 
    primaryKeyAttributes = (id); 
}
