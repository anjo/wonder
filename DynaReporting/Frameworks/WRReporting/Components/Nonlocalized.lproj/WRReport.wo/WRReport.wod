Custom1: WOCollapsibleComponentContent { 
	closedLabel = "Explode Layout"; 
	openedLabel = "Collapse Layout";	
	condition = true;
}

WRLayoutEditor1: WRLayoutEditor {
	model = model;
	recordGroupTotalFormat = recordGroupTotalFormat;
	recordGroupTotalToShow = recordGroupTotalToShow;
	selectedRecordGroupDisplayType = selectedRecordGroupDisplayType;
	selectedReportStyle = selectedReportStyle;
	shouldTotalCheck = shouldTotalCheck;
	showCustomReportStyle = showCustomReportStyle;
	showNavigation = showNavigation;
	showRecordGroupHeadings = showRecordGroupHeadings;
	showRecordGroupAsTable = showRecordGroupAsTable;
	keysInH = ^keysInH;
	keysInV = ^keysInV;
	keysInZ = ^keysInZ;
}

attribLabel: WOString{
	value= attribLabel;
}
attribs: WORepetition{
	list = attributeListAtDepth;
	item = attrib;
}

attribsGroup: WRAttributeGroup{
	model = model;
	totalsOnly = false;
	groups = model.vList;
	bgcolor = "#dedede";
}

attributeTd:WOGenericContainer{
	elementName = "th";
	colspan = colSpan;
	rowspan = rowSpan;
	class = classAttributeTd;
	id = idAttributeTd;
}

colSpanTd: WOGenericContainer{
	elementName = "td";
	bgcolor = bgcolorColSpanTd;
	colspan = horzColSpan;
	class = classColSpanTd;
}
colSpanTdHead: WOGenericContainer{
	elementName = "th";
	colspan = horzColSpan;
	class = "WRTitle";
}
criteriaLabel: WOString {
	value = topCriteria.label;
	escapeHTML = false;
}
customContent: WOComponentContent {
}

depthList:WORepetition{
	count = depthCount;
	index = depth;
}
dontshowDefaultReportStyle: WOConditional{
	condition= showDefaultReportStyle;
}
dontshowVerticalRows: WOConditional{
	condition= showVerticalRows;
	negate=true;
}

editForm: WOForm{
	multipleSubmit=true;
}
groupDepth: WORepetition{
	count = vheadingIndex;
}
hCriteriaList: WRNestedList {
    list = topHorzGroupCriteriaList;
    item = topCriteria;
    index = currentIndex;
    level = currentLevel;
    sublist = horzSubList;
    //action = nestedListClicked;
    //isOrdered = true;
}
hCriteriaList2: WRNestedList {
    list = topHorzGroupCriteriaList;
    item = topCriteria;
    index = currentIndex;
    level = currentLevel;
    sublist = horzSubList2;
    //action = nestedListClicked;
    //isOrdered = YES;
}
hasTitle: WOConditional {
	condition = hasTitle;
}

horzDimensions: WORepetition { 
	list=horzDimensions; 
	item=hGroup;
}
numberOfCrits:WORepetition{
	count = numberOfCrits;
	index = currentIndex;
}

recordGroupTest:WOSwitchComponent {
	WOComponentName = componentName;
	model = model;
	recordGroup= recordGroup;
	showHeadings= showRecordGroupHeadings;
	displayType = selectedRecordGroupDisplayType;
	totalToShow = recordGroupTotalToShow;
	formatForSingleTotal = recordGroupTotalFormat;
	showAsTable = showRecordGroupAsTable;
	colorForCoords = colorForCoords;
	colors = colorDict;
	totalDict = totalDict;
        coordinates = currentCoordinates;
	reportStyle = selectedReportStyle;
}
rowSpanTd: WOGenericContainer{
	elementName = "td";
	rowspan = vertRowSpan;
	bgcolor = bgcolorRowSpanTd;
	class = classRowSpanTd;
}
rowSpanTd2: WOGenericContainer{
	elementName = "td";
	bgcolor = bgcolorRowSpanTd;
	nowrap = "nowrap";
	class = classRowSpanTd;
}
rowSpanTd2Span: WOGenericContainer{
	elementName = "td";
	bgcolor = bgcolorRowSpanTd;
	colspan= depthCountAllAttribs;
	class = classRowSpanTd;
}


showDefaultReportStyle: WOConditional{
	condition= showDefaultReportStyle;
	negate=true;
}

showHeadersForAsCells: WOConditional{
	condition = showHeadersForAsCells;
}
showIndentCell: WOConditional{
	condition= showIndentCell;
}
showNoColNoRow: WOConditional{
	condition= showNoColNoRow;
}
showPresentationControls: WOConditional{
	condition = showPresentationControls;
}
showSingleCol:WOConditional{
	condition= showSingleCol;
}


showSingleRow:WOConditional{
	condition= showSingleRow;
}

showTopCrits: WOConditional {
	condition = showTopCriteriaLabel;
}
//vIndentCriteriaLabel2:WOString{
//	value = vIndentCriteriaLabel;
//	escapeHTML = NO;
//}
//showIndentCell2:WOConditional{
//	condition= showIndentCell;
//}
showVHeadings:WOConditional{
	condition= showVHeadings;
}
showVerticalRows:WOConditional{
	condition= showVerticalRows;
}

title: WOString {
	value = title;
	escapeHTML = false;
}
vCriteriaList: WRNestedList {
    list = topVertGroupCriteriaList;
    item = topCriteriaV;
    index = currentIndexV;
    level = currentLevelV;
    sublist = vertSubList;
    //action = nestedListClicked;
    //isOrdered = YES;
}
vGroups: WORepetition { list= vertDimensions; item= vGroup;}
vIndentCriteriaLabel:WOString{
	value = vIndentCriteriaLabel;
	escapeHTML = false;
}
vcriteriaLabel:WOString{
	value = topCriteriaVLabel;
	escapeHTML = false;
}



vindent:WORepetition{
	count = vheadingCount; 
	index = vheadingIndex;
}

vindent2:WORepetition{
	count = vheadingCount2; 
	index = vheadingIndex;
}

zlist1: WRNavigationControl {
	listLabel = "H";
	listName = "Horizontal List";
	model = model;
	showNavigation = showNavigation;
	zCriteria = currentZCriteria;
}

zlist2: WRNavigationControl {
	listLabel = "Z";
	listName = "Page List";
	model = model;
	showNavigation = showNavigation;
	zCriteria = currentZCriteria;
}

zlist3: WRNavigationControl {
	listLabel = "V";
	listName = "Vertical List";
	model = model;
	showNavigation = showNavigation;
	zCriteria = currentZCriteria;
}
